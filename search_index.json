{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["'add',","'fail_user',","'have_birthday';","'jeremy',","'mi","'receive_user',","'redux","'request_user',","'test'","'tucker'","'tucker',","'update_dog';","()","(action.typ","(e)","(or","({","*","+","...state,","...state.dog,",".call(api.updatedog,",".call(identity,",".dispatch({",".isdone();",".next()",".next(action)",".provide([",".put({",".run();",".take('hello')",".withreducer(reducer)","//","1,","11,","12,","2);","20","40,","42","42),","42,","=","===","=>","[call(api.fetchuser,","[matchers.call.fn(api.fetchpet),","[matchers.call.fn(api.fetchuser),","])","`'hello'`","`action`","`call`","`identity`","`next()`","`put`","`take`","`take`.","action","action)","action);","action.payload);","actual","addit","advanc","age:","aim","allow","alway","api","api';","api)","apis.","applic","application.","approach","approach,","arg","argument","argument.","array","assert","asynchronously,","avail","back","becom","befor","behavior","below","below,","bonu","bootstrap","both","break","breeze.","call","call(api.fetchpet,","call(api.fetchuser,","call(api.updatedog,","call(identity,","call,","call.fn","case","cases,","catch","chainabl","choos","complete.","compos","concern","const","contain","content","coupl","covered.","creator","determinist","differ","directli","dispatch","docs.","dog","dog);","dog:","downsid","dure","dynam","e","easi","easier","easy.","effect","effect,","effect.","effects.","embrac","ensur","entir","error","error('error');","error:","errors',","even","eventu","exact","exampl","example:","expect","expectsaga","expectsaga(saga,","expectsaga(usersaga,","expectsaga.","fake","fakedog","fakedog],","fakeus","fakeuser,","fakeuser],","fetchuser:","finally,","finish","flavor","flexibl","forc","fork","function","function*","function.","gener","get","getdog","give","global","good","great","handl","happen.","have_birthday","have_birthday)","helper","here","here'","hook","id","id,","id:","identity(value)","implementation.","import","initialst","initialstate,","insid","instead","integr","intercept","introduct","it('fetch","it('handl","it('just","it('work","jest","jest,","know","labori","mainsaga(x,","make","match","matcher","messag","method","method.","middlewar","mock","modul","module.","more","name:","need","negat","new","non","notic","object","offer","on","order","order,","pair","pairs)","partial","particular","pass","payload.","payload:","perfect","pet","pet:","petid:","plan","plan'","plan';","plan.","plan/match","plan/matchers';","plan/provid","plan/providers';","point,","problems.","promis","promise.","provid","providers,","providers.","put","put'","put({","put,","reach","receive_us","reduc","reducer(st","reducers',","redux","reorder","request_us","requir","resolv","return","reuse,","run","run.","runner","saga","saga(api)","saga,","saga.","saga/effects';","same.","second","select(getdog);","select,","server","similar","simpl","simpli","simul","sometim","special","specif","start","state","state.dog.ag","state.dog;","state;","static","stay","successfulli","suppli","tabl","take","take('hello');","take('request_user');","take(update_dog);","test","test.","testing,","tests',","testsaga","testsaga(mainsaga,","then,","thing","this,","those","throwerror","throwerror(error)],","time","timeout","timeout.","too.","travel","tri","tupl","two","type","type:","unit","up","update_dog","updatedog()","us","user","user',","user,","user.petid);","user:","usersaga","usersaga()","usersaga(api)","usersaga.","valu","value.","value;","via","want","whether","without","withreduc","works!',","worri","x","y","y)","yield","yields,","you'll","you'r","{","{}","}","})","}),","});","},","};"],"getting-started.html":["able.","ad","add","back","can't","current","dev","effortless.","featur","features,","get","guarante","i'll","instal","latest","newer","note:","npm","npm.","plan","plan,","plan.","plan@^2.0","port","pr","redux","saga","saga.","save","start","still","support","test","though,","time","upgrad","us","v0.14","v0.14,","v0.15","v2","v3","version","welcome.","yarn","you'r"],"integration-testing/":["'add',","'hello');","'redux","()","+",".put({",".run();","//","2)","40,","42","=>","`put`","action","action',","add","addit","api","application.","argument","argument.","assert","assertions,","asynchronous.","asynchronously,","avail","below","bother","call","call([console.log,","call,","certain","completes.","console],","don't","effect","effects.","even","eventu","exampl","expect","expectsaga","expectsaga(mainsaga,","expectsaga,","expectsaga.","export","fail,","favorit","first","framework.","function","function*","function,","function.","gener","global","import","integr","it('put","jest","know","look","mainsaga(x,","make","mean","method","method.","notic","pass","pass,","payload:","plan","plan';","promis","promise,","promise.","put","put({","redux","reject","requir","resolve.","return","run","runsaga","saga","saga'","saga/effects';","start","test","testing,","type:","us","x","y","y)","yield","{","}","})","});"],"integration-testing/effect-creators.html":["'world'","()","...args)",".returns({",".run();","=>","[buffer])","actionchannel(pattern,","api","apply(context,","args)","assert","avail","call([context,","call(fn,","call,","cps([context,","cps(fn,","creator","doc","effect","expectsaga","expectsaga(saga)","fn,","fn],","fork([context,","fork(fn,","fork,","function*","greeting',","hello:","here.","invok","it('return","join(task)","level","mean","method.","put(action)","put.resolve(action)","race(effects)","redux","refer","report","return","saga","saga'","saga()","saga.","select(selector,","spawn","spawn([context,","spawn(fn,","take(pattern)","take.maybe(pattern)","test,","top","under","valu","value.","via","won't","work","{","}","})","});","};"],"integration-testing/dispatching.html":["'add',","'bar'","'done'","'foo'","'hello'","'redux","'world'","()","+",".delay()",".delay(250)",".dispatch({",".put({",".run();",".run({","//","2)","250m","40,","42","=","=>","`take`","action","actions',","actions,","actions.","argument.","assert","be","befor","behalf","besid","block","case","const","delay","delay(250).then(()","delaying,","dispatch","doesn't","don't","effect","effects.","ensur","expect","expectsaga","expectsaga(mainsaga)","expectsaga(mainsaga);","expectsaga(mainsaga,","fals","function*","immedi","import","internally,","it('can","it('handl","keep","mainsaga()","mainsaga(x,","method.","needed.","new","normal,","note","order","payload:","plan","plan';","promis","promise((resolve)","promise;","put","put({","queue","quickly.","receiv","redux","return","run","running',","running,","running.","saga","saga,","saga.dispatch({","saga.put({","saga.run({","saga/effects';","settimeout(resolve,","take","take('bar');","take('foo');","take('hello');","take('world');","test","them.","time","time);","timeout:","type:","us","wait","want","x","y","y)","yield","{","}","})","});"],"integration-testing/timeout.html":["'data',","'hello'","'ready',","()","(true)",".dispatch({",".put({",".run();",".run(500);",".run(false);",".run({","//","250","250m","300);","300ms,","42","500;","500m","=","=>","action","action.payload","actions,","adjust","alternatively,","asynchron","asynchronously,","behavior","call(delay,","cancel","case","case,","chang","consol","const","default","default_timeout","delay","differ","done","expect","expectsaga","expectsaga(mainsaga)","expectsaga.default_timeout","fals","finish","forc","function*","helper","implicit","infinit","instead","it('can","it('nev","it('tim","length","length',","length.","long.","loop","loop,","loops,","mainsaga()","messag","message,","message.","method","method.","milliseconds.","multipl","need","never","new","object","opt","out","out',","out.","overrid","own.","particular","pass","payload:","print","promise(resolv","properti","put({","return","run","safe","saga","set","settimeout(resolve,","silenc","silenced',","silencetimeout","silencetimeout:","take","take('ready');","takeevery.","termin","test","therefore,","though,","time","time));","timeout","true","true.","type:","typic","until","us","wait","want","warn","warning:","warnings,","without","won't","work","yield","{","}","})","});"],"integration-testing/state.html":["'age_after';","'age_before';","'bar',","'data',","'have_birthday';","'tucker',","()","(action.typ","+","...state,",".dispatch({",".put({",".run();",".withreducer(dogreducer)",".withreducer(dogreducer,",".withstate(storestate)","1,","11","11,","12","=","===","=>","action","action)","against.","age:","age_aft","age_after,","age_befor","age_before,","ageaft","agebefor","api","arguments:","below:","change,","const","data","data:","dogreducer(st","don't","effect,","expectsaga","expectsaga(saga)","extract","foo:","function","function*","getage(state)","getdata(state)","have_birthday","have_birthday)","includ","initi","initialdog","initialdog)","initialdog,","it('can","it('handl","manag","method","method.","name:","need","option","pass","payload:","put({","reduc","redux.","return","saga","saga()","seen","select","select(getage);","select(getdata);","state","state',","state,","state.","state.ag","state.age;","state.data;","state;","static","store","storest","storestate.data","suppli","take","take(have_birthday);","tests.","two","type:","us","withreduc","withstat","yield","you'll","{","}","})","});","},","};"],"integration-testing/mocking/":["allow","api","argument","array","call","creat","creator","effect","especi","fake","handl","instead","integr","intercept","laborious,","layer","let","literal.","make","method","method.","middlewar","mock","object","on","plan","provid","providers,","providers.","redux","saga","select.","selector","server","similar","simpler,","sometim","state","take","test","them.","us"],"integration-testing/mocking/static-providers.html":["'bar'","'done',","'fail_user',","'hello',","'john","'mi","'receive_user',","'redux","'tucker'","'tucker',","'tucker'],","'user',","(","()","(array","(e)","(or","({",");","*","+","...args)",".provide([",".put({",".run();","//","1);","11","11],","2","2;","3","4","4);","42","42,","42],","6","6);","8);",":","=","===","=>",">","?","[","[a]","[buffer])","[matchers.call.fn(add2),","[matchers.call.fn(api.fetchuser),","[matchers.call.fn(api.finddog),","[matchers.call.fn(api.finduser),","[name,","[select(selectors.getage),","[select(selectors.getid),","[select(selectors.getname),","[select(selectors.getotherdata),","])","]);","];","`call.fn`","`select`","action","action.type.","actionchannel","actionchannel(pattern,","actionchannel.","actionchannel.pattern","actiontyp","add2","addit","additionally,","ag","age:","age]","all([","allow","along","api","api';","appli","apply(context,","apply.fn","appropri","arg","args)","args:","argument","arguments.","array","arrays',","arrays.","assert","assertions:","attempt","avail","available,","back","be","benefit","buffer","call","call',","call([context,","call(add2,","call(api.fetchuser);","call(api.fetchuser,","call(api.finddog);","call(api.findgreeting);","call(api.finduser,","call(fn,","call,","call.fn","can't","cancel(task)","cancelled()","catch","caveat","certain","check","common","compos","const","contriv","conveni","correct","cp","cps([context,","cps(fn,","cps.fn","creator","custom","depend","deprec","descript","doc","doe'","dog","dog,","dog:","down","dynam","dynamic(providedoubleif6)],","dynamic(providetripleifgt4)],","e","each","effect","effect.","effect:","effects.","element","ensur","environ","error","error('error');","error,","error.","error:","errors',","essentially,","exact","exampl","example,","expectsaga","expectsaga(forkingsaga)","expectsaga(saga)","expectsaga(somesaga)","expectsaga(spawningsaga)","expectsaga(usersaga)","fail","fakedog","fakedog,","fakedog],","fakeotherdata","fakeotherdata,","fakeotherdata],","fakeus","fakeuser,","fakeuser],","fetchusersaga()","first","flush(channel)","fn","fn,","fn.","fn],","follow","foo:","fork","fork([context,","fork(fetchusersaga);","fork(fn,","fork,","fork.fn","forked/spawn","forkingsaga()","function","function*","function,","function.","further","gener","greater","greet","greeting,","greeting:","handl","helper","here.","id","id);","id:","import","insid","inspect","instead","intercept","interest","intermediari","it('handl","it('provid","it('tak","it('work","it).","javascript","join(task)","kind","know","knowledg","left","like,","look","manner","match","match,","matcher","matchers.","matching.","method","method.","middlewar","mock","module,","module.","more","multipl","name","name,","name:","necessarili","new","next","next()","next)","normal.","note:","object","offer","order","otherdata","otherdata:","pair","pair,","pairs)","parallel","partial","particular","pass","pattern.","payload.","payload:","phantomjs.","plan","plan'","plan';","plan/match","plan/matchers';","plan/matchers.","plan/provid","plan/providers';","produc","properti","properties.","property,","property.","provid","provide.","providedoubleif6","provider,","providers',","providers,","providers.","providetripleifgt4","put","put(action)","put({","put,","put.","put.actiontyp","put.resolv","put.resolve(action)","put.resolve.actiontyp","race(effects)","receiv","redux","refer","regard","remov","renam","repo","requir","return","right","saga","saga'","saga()","saga,","saga.","saga/effect","saga/effects';","sagas',","sagawrapp","second","select","select(selector,","select(selectors.getage),","select(selectors.getid);","select(selectors.getname),","select(selectors.getotherdata);","select.selector","selector","selectors';","similar","simul","situat","skip","somesaga()","sometim","spawn","spawn([context,","spawn(fetchusersaga);","spawn(fn,","spawn.fn","spawningsaga()","stack.","static","subsequ","such","suppli","support","take","take(pattern)","take.maybe(pattern)","task","tell","ters","test","tests.","them',","therefore,","throw","throwerror","throwerror(error)],","thrown","too.","top","tri","tupl","type.","type:","us","used,","user","user,","user:","usersaga(id)","valu","value,","value.","via","want","well","without","work","work,","worri","wrap","x","y","yield","you'r","z","{","}","})","});","},","};","}],"],"integration-testing/mocking/dynamic-providers.html":["'bar'","'done',","'fail_user'","'fail_user',","'hello',","'john","'mi","'receive_user',","'redux","'request_user'","'request_user',","'timeout'","'tucker'","'tucker',","'tucker';","'user',","(","()","(e)","(effect.fn","(fn","(selector","(user)","({","),",");","*","**","*becaus","*to",".dispatch({",".provide([",".provide({",".put({",".run();","//","1","1);","1,","11","11;","11],","500),",":","=","===","=>","?","[","['tucker',","[id]","[name,","])","]);","];","`call`","accord","action","action.payload;","actionchannel","ag","age:","age]","all([","all,","all:","allow","altern","api","api';","api.fetchuser)","api.finddog","api.findus","appli","args:","argument","arguments,","array","array',","array.","arrays',","arrays.","attempt","available,","back","base","be","befor","call","call',","call(api.fetchuser);","call(api.fetchuser,","call(api.finddog);","call(api.findgreeting);","call(api.finduser,","call(delay,","call(effect,","call({","call,","call:","callback","callback.","can't","cancel","catch","caveat","check","complet","compos","composed,","composeprovid","composeproviders(","const","contain","contriv","correct","coupl","cp","creator","creator*:","delay","deleg","depend","deprec","distinguish","doe'","dog","dog,","dog:","don't","dynam","e","each","easiest","effect","effect.","effect.args[0];","effects,","effects.","ensur","entir","environ","error","error('whoops...');","error,","error:","error;","even","exampl","expectsaga","expectsaga(forkingsaga)","expectsaga(saga)","expectsaga(spawningsaga)","fail","fake","fakedog","fakedog,","fakeotherdata","fakeotherdata,","fakeus","fakeuser,","fakeuser;","fetchusersaga()","first","flush","fn","fn,","foo:","fork","fork(fetchusersaga);","fork,","forked/spawn","forkingsaga()","function","function*","function.","gener","greet","greeting,","greeting:","handl","handler","here","id","id),","id);","id,","id:","import","insid","inspect","intercept","intermediari","invok","it('can","it('provid","it('tak","javascript","jest","join","key","left","liter","look","mayb","mean","method.","methods.","middlewar","middleware.","module.","more","multipl","name","name,","name:","necessarili","need","never","new","next","next()","next();","next)","normal.","note:","object","on","order","otherdata","otherdata:","parallel","parameter.","pass","payload:","phantomjs.","plan","plan';","plan/provid","plan/providers';","probabl","promise(resolv","properti","property,","property.","provid","providedog","provideotherdata","provideotherdata,","provider:","providers,","provideus","provideuser,","put","put({","put,","put.resolve,","race","race({","race,","race:","receiv","redux","remov","renam","repo","resolv","respectively.","return","right.","saga","saga',","saga()","saga,","saga.","saga/effects';","sagas',","sagawrapp","select","select(selectors.getage),","select(selectors.getage);","select(selectors.getname),","select(selectors.getname);","select(selectors.getotherdata);","select({","select:","selector","selector',","selectors';","selectors.getage)","selectors.getname)","selectors.getotherdata","settimeout(resolve,","show","similar","simul","spawn","spawn(fetchusersaga);","spawningsaga()","specif","stack.","subsequ","succeeds',","suppli","support","take","take('request_user');","take.mayb","task","test","test('fetch","test('timeout","tests.","them',","therefore,","though","throw","time","time))","timeout:","too.","tri","two","type,","type:","undefin","us","user","user,","user:","valu","values.","via","want","way","well","wins',","work","work,","wrap","yield","you'll","yourself,","{","}","})","}),","});","},","};"],"integration-testing/partial-matching.html":["'fail_user'","'fail_user',","'foo',","'receive_user',","'world'","()","(e)",".call.fn(api.fetchuser)",".call.like({",".provide({",".put.actiontype('fail_user')",".put.like({",".run();","//","42,","43,","=","=>","action","action.","action.type.","action:","actionchannel","actionchannel.","actionchannel.pattern","actiontyp","allow","along","api.fetchus","appli","apply.fn","appropri","arg","argument","arguments.","assert","assertions.","assertions:","available,","buffer","call","call()","call(api.fetchuser,","call.fn","cases,","catch","certain","common","concern","const","conveni","cp","cps.fn","creator","custom","deep","descript","dispatch","e","effect","effect.","effect:","error","error('not","error:","essentially,","exact","exampl","expectsaga(saga)","expectsaga(usersaga)","fail_us","failur","fn","fn.","fn:","follow","fork","fork.fn","found');","function","function*","function.","handl","hello:","helper","here","id);","insid","instead","interest","invok","it('can","it('fails',","it('fetch","kind","knowledg","like:","match","matcher","meta:","method","multipl","need","new","note:","notic","partial","particular","pass","pattern.","payload","payload:","previou","properti","properties',","properties.","property.","put","put({","put.","put.actiontyp","put.actiontype:","put.resolv","put.resolve.actiontyp","rare","requir","return","saga(id)","scenario","select","select.selector","selector","shallow","simpl","simplifi","situat","sometim","spawn","spawn.fn","specifi","such","therefore,","throw","tri","type","type:","us","user","user',","usersaga(id)","via","without","worri","yield","you'r","{","}","})","});","},"],"integration-testing/negated-assertions.html":["()","(token)",".not.call.fn(api.settoken)",".run();",".withstate({})","=","=>","assert","assertion.","assertions!","authsaga()","befor","call","call(api.settoken,","const","expectsaga(authsaga)","function*","it('do","matcher","negat","partial","properti","return","select(authtoken);","set","token","token',","token);","too.","us","work","yield","{","}","});"],"integration-testing/forked-sagas.html":["'forked'","'take_every'","()",".dispatch({",".fork(othersaga)",".put({",".run();","//","=>","`othersaga`!","`put`","action","actual","assert","behavior","besid","come","exampl","expectsaga","expectsaga(saga)","expectsaga(sagawithtakeevery)","fork","fork(othersaga);","function*","here","it('fork","it('takeeveri","it.","main","minim","othersaga()","othersaga);","passes',","perspect","put","put({","regardless","return","runs',","saga","saga()","saga(s)","saga,","sagas.","sagawithtakeevery()","takeevery('take_every',","them.","type:","us","want","work","yield","{","}","})","});"],"unit-testing/":["'add',","'error',","'redux","'test'","(e)","+",".call(identity,",".fork(othersaga)",".isdone();",".next()",".next(action)",".put({",".take('hello')",".throw(error)","//","2,","20);","40,","42","=","action","action)","action);","addit","advanc","agnost","allow","api","argument","argument.","assert","assertions.","avail","call","call(identity,","call,","catch","chain","const","creat","don't","e","each","effect","effects.","end.","error","error');","error('mi","error.","es2015","es5","etc.","export","first","fork(othersaga,","fork,","framework,","function","function*","function.","gener","identity(value)","import","isdon","iter","mainsaga(x,","match","methods,","mock","new","next","on.","othersaga()","pass","path","payload:","plan","plan').testsaga;","plan';","put({","put,","reach","redux","require('redux","respons","return","saga","saga.","saga.next().call(identity,","saga.next().fork(othersaga);","saga.next().isdone();","saga.next().take('hello');","saga.next(action).put({","sequenc","similarli","simpli","simul","specifi","such","take('hello');","take,","test","testing,","testsaga","testsaga(mainsaga,","through","throw","thrown","togeth","tri","type:","unit","valu","value;","var","x","y","y,","yield","yields.","z","z)","z);","{","{}","}","})","});","};"],"unit-testing/error-messages.html":["'@@redux","'add',","'error',","'hello'","'hi'","'test'","'world'","(e)","+",".next()",".next(action)",".put({",".take('hello')",".take('world');","//","1","2","2,","20);","40,","42","43","=","action","action);","action:","actual","assert","below:","between","call","call(identity,","catch","channel:","const","differ","difference.","don't","e","effect","effect,","effects,","error","expect","failed:","fork(othersaga,","function","function*","identity(value)","mainsaga(x,","match","match,","messag","mock","null,","othersaga()","pattern:","payload:","put","put({","put:","return","saga","saga.next().take('hi');","saga/io':","sagatesterror:","show","take","take('hello');","take:","testsaga(mainsaga,","throw","tri","true,","two.","type","type:","value;","x","y","y,","yield","z)","z);","{","{}","}","});","};"],"unit-testing/effect-creators.html":["...args)","[buffer])","action)","actionchannel(pattern,","all([...effects])","api","apply(context,","args)","assert","avail","call([context,","call(fn,","cancel(task)","cancelled()","cps([context,","cps(fn,","creator","deprecated:","doc","effect","flush(channel)","fn,","fn],","fork([context,","fork(fn,","here.","join(task)","put(action)","put(channel,","put.resolve(action)","race(effects)","redux","refer","saga'","saga.","select(selector,","spawn([context,","spawn(fn,","take(channel)","take(pattern)","take.mayb","take.maybe(channel)","take.maybe(pattern)","takem(channel)","takem(pattern)","testsaga","us"],"unit-testing/saga-helpers.html":["'foo')","'foo');","'redux","(i.e.",".call(identity,",".finish()",".isdone();",".next()",".takeevery('ready',",".takeeveryfork('ready',","//","2","42)","42);","[function:","accord","action.payload);","actual","ad","advanc","anothersaga","anothersaga(action)","anothersaga,","anothersaga]","assert","assertion.cal","assertion.don't","assertions,","assertions.","automat","before.","beforehand.","below:","between","block","call","call(identity,","come","creator","creator.","creators.","decid","deleg","delegating,","delegation,","delegations.","deprec","differ","directli","directly,","effect","encourag","equival","exampl","expect","failed:","flavors.","fork","function","function*","good","helper","helperdeprec","helpers,","identity(value)","import","instead","internally,","mainsaga()","mean","method","methods.","modul","module,","module.","move","necessarili","need","next","non","normal","notice:becaus","notice:deleg","now","offer","othersaga(action,","othersaga,","othersaga]","pattern","pattern,","plan","plan';","plan.","pleas","possibl","prior","put.","redux","remov","respect","return","review","saga","saga';","saga,","saga.","saga/effect","saga/effects';","saga/effects,","sagatesterror:","same","shouldn't","start","still","such","summari","support","takeeveri","takeevery('ready',","takeevery,","takeeveryeffect","takeeveryeffect,","takeeveryfork","takeeveryfork,","takelatest","takelatest,","takelatesteffect,","takelatesteveryeffect","takelatestfork","takelatestfork,","test","testsaga","testsaga(mainsaga)","throttl","throttle.","throttleeffect","throttlefork","throw","to,","two","us","v0.12.0,","v0.14.0.","value)","value);","value;","yield","yield*","yield*)","yields;","you.","{","}"],"unit-testing/general-assertions.html":["'baz'","'redux","()","*",".inspect((fn)",".is(42)",".is({",".isdone();",".next()",".returns(42);","21);","2;","42;","=","=>","actual","assert","assertions,","avail","bar:","const","cover","custom","deep","descript","done","easili","effect","end","equal","exampl","expect(fn()).tobe(42);","favorit","fine","foo:","function*","gener","grained,","helper","import","inspect","inspect.","is,","isdon","isdone,","library.","mainsaga()","more","next","nondeterminist","othersaga(x)","perform","purpos","retriev","return","returns,","saga","saga()","saga/effects';","someth","take","test","testsaga(mainsaga);","testsaga(othersaga,","testsaga(saga)","type","us","valu","x","yield","{","}","})","});","};"],"unit-testing/time-travel.html":["%=","'befor","'done'","'done',","'hello","(default","(e)","(label","(predicate)","(true)",".back()",".back(2)",".call(identity,",".finish()",".finish(42)",".isdone()",".isdone();",".next()",".next(action)",".next(false)",".next(true)",".put({",".restart('hello",".restart()",".returns(42);",".save('befor",".select(getpredicate)",".select(getpredicate);",".take('error')",".take('false')",".take('hello')",".take('ready')",".take('true')",".throw(error)","//","1)","1.","101;","42","42);","=","`2`","`else`","action","action)","action);","add","allow","any)","appli","argument","argument(s)","arguments,","array)","avail","back","back(n?:","bail","begin","benefici","branch","brittl","call","call(identity,","call(itwasfalse);","call(itwastrue);","cases,","catch","certain","complet","const","contribut","control","default","descript","despit","differ","don't","earli","error","error');","error('mi","even","exampl","expect","export","fast","featur","final","finish","finish(arg?:","flow","forc","forward","forward,","function","function*","future.","generator.","getfinalpayload()","getpredicate()","go","had.","handl","here'","histori","history.","idea","identity(value)","if/els","includ","intern","itwasfalse()","itwastrue()","jump","label","label.","less","loop,","loopingsaga()","mainsaga()","mainsaga(x)","mean","mentioned,","method","method.","methods.","mock","more","multipl","name","necessarili","new","note","number","number)","on","option","origin","out","overwritten","pass","payload","payload,","payload:","plan","point","predic","predicate'","predicate')","previou","prior)","put'","put({","restart","restart(...args:","restart.","restarted,","restor","restore(label:","restore.","return","robust","saga","saga.","same","save","save(label:","select(getfinalpayload);","select(getpredicate);","show","simpl","sometim","specifi","state","step","string)","such","suggest","suggestions,","suggests,","suppli","take","take('error');","take('false');","take('hello');","take('ready');","take('true');","tent","testsaga(loopingsaga);","testsaga(mainsaga);","testsaga(mainsaga,","though","through","throw","time","travel","travel,","travel.","tri","true","try/catch.","type:","up","up.","updat","us","used.","valu","value;","variable,","want","welcom","whatev","work","world'","world')","wouldn't","x","yield","{","{}","}","})","});"]},"length":19},"tokenStore":{"root":{"1":{"0":{"1":{"docs":{},";":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}},"docs":{}},"1":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.008403361344537815},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0034770514603616135}},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}},"]":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}},";":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968}}}},"2":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.008403361344537815}},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}},"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286}},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},";":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}},".":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}},"2":{"0":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}},")":{"docs":{},";":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.012987012987012988},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.00964630225080386}}}}},"1":{"docs":{},")":{"docs":{},";":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}},"5":{"0":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}},"m":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}},"docs":{}},"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}},")":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}},";":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}},";":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}},",":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.012987012987012988},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.00964630225080386}}}},"3":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}}},"docs":{}},"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}},"4":{"0":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"unit-testing/":{"ref":"unit-testing/","tf":0.012987012987012988},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.00964630225080386}}}},"2":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.014388489208633094},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}},")":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.008316008316008316}},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}},";":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}}}},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}},"]":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}},";":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.015037593984962405}}}},"3":{"docs":{"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572}},",":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}},"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827}},")":{"docs":{},";":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}},"5":{"0":{"0":{"docs":{},";":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}},"m":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547}}},")":{"docs":{},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}},"docs":{}},"docs":{}},"6":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827}},")":{"docs":{},";":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}},"8":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}},"docs":{},"'":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"'":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/":{"ref":"integration-testing/","tf":0.012345679012345678},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007},"unit-testing/":{"ref":"unit-testing/","tf":0.012987012987012988},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.01929260450160772}}}}}},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{},";":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"'":{"docs":{},";":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}},",":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"'":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007}},",":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.008174386920980926}}},")":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.008316008316008316}},";":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}}}}},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"'":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.028037383177570093}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},"'":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"'":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.01079136690647482},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286}},")":{"docs":{},";":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}}}},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}}}}},"i":{"docs":{},"'":{"docs":{"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286}}}}},"j":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"y":{"docs":{},"'":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}}},"o":{"docs":{},"h":{"docs":{},"n":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906}}}}}},"m":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.006896551724137931},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.006954102920723227}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.005172413793103448},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.005563282336578581},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"x":{"docs":{"./":{"ref":"./","tf":0.009868421052631578},"integration-testing/":{"ref":"integration-testing/","tf":0.012345679012345678},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.015517241379310345},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.012517385257301807},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.012474012474012475},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}},",":{"docs":{"./":{"ref":"./","tf":0.003289473684210526},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"y":{"docs":{},"'":{"docs":{},",":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"'":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572}}}}}},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{"./":{"ref":"./","tf":0.003289473684210526},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},",":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0034770514603616135}}},"]":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827}}}},";":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"'":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}}}}}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"'":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{},"'":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.006954102920723227}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{},"'":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.020618556701030927},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286}}}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"'":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},",":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}},"z":{"docs":{},"'":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.015037593984962405}}}}},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}}}}},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"'":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.021505376344086023},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.01011804384485666}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"'":{"docs":{},",":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.01079136690647482},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.008403361344537815}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"'":{"docs":{},",":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.00974025974025974},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572}}}}}}}}},"@":{"docs":{},"@":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"x":{"docs":{"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572}}}}}}}}}},"(":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906}},")":{"docs":{"./":{"ref":"./","tf":0.005482456140350877},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.010752688172043012},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.014388489208633094},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.012605042016806723},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.006896551724137931},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.011821974965229486},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.013623978201634877},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.028037383177570093},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}}},"e":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"f":{"docs":{},"n":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}},"{":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0034770514603616135}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372}}}}}}}},"f":{"docs":{},"n":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.004172461752433936}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}},"i":{"docs":{},".":{"docs":{},"e":{"docs":{},".":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}}}}}}}}}}}}},"*":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.007758620689655172},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}},"*":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}},"b":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}},"t":{"docs":{},"o":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}},"+":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}},".":{"docs":{},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.09278350515463918},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.007758620689655172},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.13846153846153847}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},".":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.008316008316008316},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"docs":{},"{":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"{":{"docs":{"./":{"ref":"./","tf":0.005482456140350877},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.014336917562724014},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.008403361344537815},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"2":{"5":{"0":{"docs":{},")":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}}},"docs":{}},"docs":{}},"docs":{},")":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}},";":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.008316008316008316},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}}}}}}}}},"(":{"4":{"2":{"docs":{},")":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}},"docs":{}},"docs":{},"{":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{},")":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.003289473684210526},"unit-testing/":{"ref":"unit-testing/","tf":0.01948051948051948},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.012474012474012475},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.03759398496240601},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.050590219224283306}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"f":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"[":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.006896551724137931},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}},"{":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.008344923504867872},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.010752688172043012},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.014388489208633094},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.02100840336134454},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.006896551724137931},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.009040333796940195},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.018691588785046728},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}}}},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"f":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{},")":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"docs":{},"{":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"5":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}},"docs":{}},"docs":{}},"docs":{},")":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.012605042016806723},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.006896551724137931},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.009040333796940195},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.013623978201634877},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.028037383177570093}}}},"{":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"4":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}},"docs":{}},"docs":{},"{":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"'":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"'":{"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"y":{"docs":{},"'":{"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"'":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"y":{"docs":{},"'":{"docs":{},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"(":{"docs":{},"'":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"y":{"docs":{},"'":{"docs":{},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}},",":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}}}}}}}}},"{":{"docs":{},"}":{"docs":{},")":{"docs":{"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"(":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},")":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"4":{"2":{"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}},"docs":{}},"docs":{},")":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.008316008316008316},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"2":{"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}},"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.013490725126475547}},";":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"/":{"docs":{"./":{"ref":"./","tf":0.010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.018518518518518517},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.025089605734767026},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.03237410071942446},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.037383177570093455},"unit-testing/":{"ref":"unit-testing/","tf":0.01948051948051948},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.1157556270096463},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.0498960498960499},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.013490725126475547}}}},"=":{"docs":{"./":{"ref":"./","tf":0.019736842105263157},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.010752688172043012},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.01079136690647482},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.037815126050420166},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.02086230876216968},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372},"unit-testing/":{"ref":"unit-testing/","tf":0.032467532467532464},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.022508038585209004},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.015037593984962405},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.023608768971332208}},"=":{"docs":{},"=":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.009040333796940195}}}},">":{"docs":{"./":{"ref":"./","tf":0.007675438596491228},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.021505376344086023},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.02158273381294964},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.012605042016806723},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.009482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.015299026425591099},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.013623978201634877},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.028037383177570093},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.015037593984962405}}}},"[":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"f":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{},")":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"2":{"docs":{},")":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"]":{"docs":{},")":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}},"a":{"docs":{},"]":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827}}}}}}},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"'":{"docs":{},"t":{"docs":{},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.008316008316008316}}}}}}}}}}}},"]":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.006896551724137931},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},";":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}},";":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968}}}},"`":{"2":{"docs":{},"`":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}},"docs":{},"'":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"'":{"docs":{},"`":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"`":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"`":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}},".":{"docs":{},"f":{"docs":{},"n":{"docs":{},"`":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"`":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"`":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"`":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"`":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"`":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"`":{"docs":{},"!":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.018691588785046728}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"`":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.03942652329749104},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.010899182561307902},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.028037383177570093},"unit-testing/":{"ref":"unit-testing/","tf":0.012987012987012988},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.012861736334405145},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},")":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}},";":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/":{"ref":"unit-testing/","tf":0.00974025974025974},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}},".":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}},")":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}}},";":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}}}}}},"'":{"docs":{},",":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},",":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}}},".":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}}}}}}}}}}}},"s":{"docs":{},"'":{"docs":{},",":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007}}}},",":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}},".":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}},":":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.00964630225080386}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.00964630225080386},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}},"d":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}},"d":{"2":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}},"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.019801980198019802},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547}}}}}}},"g":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.004172461752433936}},"e":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.003289473684210526},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.008403361344537815},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0034770514603616135}}},"_":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.012605042016806723}}}}}}}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}},"e":{"docs":{},",":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.012605042016806723}}}}}}}}}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.008403361344537815}}}}},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.008403361344537815}}}}}}},"]":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}}}},"n":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}}}},"i":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}}}},"(":{"docs":{},"[":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"]":{"docs":{},")":{"docs":{"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}}}}}}}},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}},":":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}},"p":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.005482456140350877},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.004310344827586207},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.004867872044506259},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}},"'":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906}}}},")":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015}}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"s":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}},"u":{"docs":{},"s":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}},"c":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}}}}}}}}}},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},",":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"n":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}},"r":{"docs":{},"o":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}}}},"r":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"integration-testing/":{"ref":"integration-testing/","tf":0.012345679012345678},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/":{"ref":"unit-testing/","tf":0.012987012987012988},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}},"s":{"docs":{},":":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}},".":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}},"(":{"docs":{},"s":{"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}},"s":{"docs":{},")":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}},":":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.004172461752433936}},"s":{"docs":{},"'":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}},".":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}},"'":{"docs":{},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}},".":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968}}},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.013157894736842105},"integration-testing/":{"ref":"integration-testing/","tf":0.024691358024691357},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":3.3642611683848793},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":5.010899182561308},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":5.069767441860465},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.037383177570093455},"unit-testing/":{"ref":"unit-testing/","tf":0.00974025974025974},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.01607717041800643},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.03076923076923077},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.018711018711018712},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":5.067669172932331}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}},":":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}},".":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}},"!":{"docs":{"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372}}}},".":{"docs":{"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.012474012474012475}}}}},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.006237006237006237}}}}}}}}}}}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}},".":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}}}}}}}}},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}},"]":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}}}}}}}}}}},"y":{"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"getting-started.html":{"ref":"getting-started.html","tf":0.019801980198019802},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.016863406408094434}},"(":{"docs":{},"n":{"docs":{},"?":{"docs":{},":":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}},"s":{"docs":{},"e":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}},"r":{"docs":{},":":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.015037593984962405}}}},"i":{"docs":{},"l":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}},"e":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372}},"e":{"docs":{},".":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.018711018711018712}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},".":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}}}}}},"l":{"docs":{},"f":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}},":":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}}}}},"n":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}},"c":{"docs":{},"i":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}}}},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}}},"t":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}},"e":{"docs":{},"r":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}},"e":{"docs":{},"z":{"docs":{},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}}}},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.005482456140350877},"integration-testing/":{"ref":"integration-testing/","tf":0.012345679012345678},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.05172413793103448},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.010344827586206896},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.004172461752433936},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.01907356948228883},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.016632016632016633},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}},")":{"docs":{},";":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},",":{"docs":{"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372}}}}}}}}}}}}}},"d":{"docs":{},"d":{"2":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724}}}},"docs":{}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.012474012474012475},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}}}}},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},",":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},",":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}}},"f":{"docs":{},"n":{"docs":{},",":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},",":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}}}}}},"{":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}},")":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}},",":{"docs":{"./":{"ref":"./","tf":0.003289473684210526},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.004310344827586207},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}},".":{"docs":{},"f":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}}},"'":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}},":":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},".":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}},"s":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}},"s":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}},",":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951},"unit-testing/":{"ref":"unit-testing/","tf":0.00974025974025974},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.019801980198019802},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},")":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}},"n":{"docs":{},"g":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}},"e":{"docs":{},",":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},":":{"docs":{"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.01929260450160772}}}}}}}},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}},"s":{"docs":{},".":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}}}}}}}},"o":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0034770514603616135}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}},"e":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.018691588785046728},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.01864035087719298},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.010752688172043012},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.03361344537815126},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.02086230876216968},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372},"unit-testing/":{"ref":"unit-testing/","tf":0.01948051948051948},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.01607717041800643},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.011804384485666104}}},"o":{"docs":{},"l":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}},"e":{"docs":{},"]":{"docs":{},",":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.003289473684210526},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}},"o":{"docs":{},"l":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":3.3642611683848793},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":5.030769230769231},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.014553014553014554}},"*":{"docs":{},":":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}},".":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}},"s":{"docs":{},".":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}},"p":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}},"s":{"docs":{},"(":{"docs":{},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},",":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}}},"f":{"docs":{},"n":{"docs":{},",":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}},".":{"docs":{},"f":{"docs":{},"n":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}}}}},"v":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.039603960396039604}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.025089605734767026},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},"(":{"2":{"5":{"0":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},")":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}}}}}}},"e":{"docs":{},"g":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.014553014553014554}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}},"s":{"docs":{},".":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.01079136690647482},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.008316008316008316}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.03076923076923077}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}},"p":{"docs":{},"i":{"docs":{},"t":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}},"e":{"docs":{},"p":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}},"c":{"docs":{},"i":{"docs":{},"d":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.00964630225080386},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}},"y":{"docs":{},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":10.050179211469533},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}},"g":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},")":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}},":":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}}}}}}}},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}},"w":{"docs":{},"n":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}},"e":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}}}}},"'":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906}}}}},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.003289473684210526},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.004310344827586207},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":5.001390820584144}},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"f":{"6":{"docs":{},")":{"docs":{},"]":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}},"docs":{}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"f":{"docs":{},"g":{"docs":{},"t":{"4":{"docs":{},")":{"docs":{},"]":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.008403361344537815}},":":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}}},"e":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572}},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}},"s":{"docs":{},"t":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}},"l":{"docs":{},"i":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}},"y":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}},"c":{"docs":{},"h":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.01425438596491228},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":3.3642611683848793},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.01810344827586207},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.015299026425591099},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.008174386920980926},"unit-testing/":{"ref":"unit-testing/","tf":0.016233766233766232},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.022508038585209004},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":5.030769230769231},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.02079002079002079},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286}}},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}},"docs":{}}}}}}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.003289473684210526},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286}}}},":":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901}}}}}}}}}}}},"m":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}},"t":{"docs":{},"i":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}},"d":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}},".":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":5.009646302250804},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}}}}}},"w":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}}},"m":{"docs":{},"i":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}},":":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}},"s":{"docs":{},"'":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}},".":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}},";":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}},"'":{"docs":{},")":{"docs":{},";":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"t":{"docs":{},"u":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}}}}}}},"x":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.005482456140350877},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.010899182561307902},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.022556390977443608},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}},"e":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.012861736334405145},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.008316008316008316},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.01206140350877193},"integration-testing/":{"ref":"integration-testing/","tf":0.037037037037037035},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.014336917562724014},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.014388489208633094},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.004310344827586207},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.006258692628650904},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}},"(":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}},")":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.012605042016806723},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0076495132127955496},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.018691588785046728}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},")":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"w":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},")":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.003289473684210526}}},")":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.010899182561307902}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},",":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}},")":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.014388489208633094}},";":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},")":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},")":{"docs":{"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372}}}}}}}}}}}},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}},",":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}}}}}}},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"4":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}}}},"s":{"2":{"0":{"1":{"5":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}},"docs":{}},"docs":{}},"docs":{}},"5":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}},"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}}}},"t":{"docs":{},"c":{"docs":{},".":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}},"a":{"docs":{},"l":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}}}},"f":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968}},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}},"]":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}}},"u":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.004867872044506259}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}},"]":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724}}}},";":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}},"]":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},",":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}}},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}},"u":{"docs":{},"r":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.00964630225080386},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}}}}}},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}}}},"l":{"docs":{},"s":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}},"s":{"docs":{},"t":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"?":{"docs":{},":":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}}},"e":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}}},"l":{"docs":{},"a":{"docs":{},"v":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}},"s":{"docs":{},".":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}},"k":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":5.046728971962617},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.008316008316008316}},"(":{"docs":{},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},",":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}}},"f":{"docs":{},"n":{"docs":{},",":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}}}},",":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572}}}}}}}}}}}}},",":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}},".":{"docs":{},"f":{"docs":{},"n":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}},"e":{"docs":{},"d":{"docs":{},"/":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"w":{"docs":{},"n":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}},",":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}},"o":{"docs":{},":":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.015037593984962405}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.007675438596491228},"integration-testing/":{"ref":"integration-testing/","tf":0.012345679012345678},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.012605042016806723},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.01043115438108484},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951},"unit-testing/":{"ref":"unit-testing/","tf":0.012987012987012988},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.011804384485666104}},"*":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.010752688172043012},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.008403361344537815},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.007758620689655172},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.008344923504867872},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.008174386920980926},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.028037383177570093},"unit-testing/":{"ref":"unit-testing/","tf":0.012987012987012988},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.012861736334405145},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.012474012474012475},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.022556390977443608},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}}},".":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}},",":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}}}}},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},".":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.012345679012345678}}},",":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}}}}}}}},"n":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0034770514603616135},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.008174386920980926}},",":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}},"]":{"docs":{},",":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.041237113402061855},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.06153846153846154}}}},".":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.004310344827586207},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.013623978201634877}}},":":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.012345679012345678},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/":{"ref":"unit-testing/","tf":0.00974025974025974},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":5.037593984962406}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"getting-started.html":{"ref":"getting-started.html","tf":5.00990099009901}},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}}}}}}}}},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}}}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}}}}}}},"o":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}},"e":{"docs":{},"r":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}},"e":{"docs":{},"t":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"'":{"docs":{},",":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464}}}},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}},":":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.034482758620689655},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0034770514603616135},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"e":{"docs":{},"r":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.012605042016806723}},")":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}}}}}}}}}},"d":{"docs":{},".":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.013623978201634877},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":5.020790020790021},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}}}}}}},"s":{"docs":{},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}},"l":{"docs":{},"o":{"docs":{},":":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.020618556701030927},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}}}},"r":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}},"'":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}},".":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.01011804384485666}}},"y":{"docs":{},".":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906}},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}},":":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}}}}}},"a":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}},")":{"docs":{},";":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.01206140350877193},"integration-testing/":{"ref":"integration-testing/","tf":0.012345679012345678},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.02327586206896552},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.020166898470097356},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.016632016632016633},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007}}}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.02100840336134454}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}},")":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}},",":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.005172413793103448},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0034770514603616135},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.006237006237006237}}}}},"a":{"docs":{},"l":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.04950495049504951}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.03007518796992481}},".":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}}}}},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.006578947368421052},"integration-testing/":{"ref":"integration-testing/","tf":5.012345679012346},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827}}}},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}},"n":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":10.00109649122807}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.014388489208633094}}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"'":{"docs":{},",":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.018691588785046728}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.008403361344537815},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}}},"j":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}}}},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.004310344827586207},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.005563282336578581}}}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}},"n":{"docs":{},"e":{"docs":{},"v":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}},"a":{"docs":{},"k":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372}}}}}},")":{"docs":{},".":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}},".":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}}},"e":{"docs":{},"r":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}}}},"'":{"docs":{},"l":{"docs":{},"l":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901}}}}},"s":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}},"e":{"docs":{},",":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}}}},",":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}},"f":{"docs":{},"/":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}},"j":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/":{"ref":"integration-testing/","tf":0.012345679012345678},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},")":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}}},"y":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},",":{"docs":{"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827}}}}}}}}},"e":{"docs":{},"l":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}},".":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901}}}}}},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827}}}}}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}},"p":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547}},",":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}},"s":{"docs":{},",":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464}}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547}},"'":{"docs":{},",":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}},".":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}}}},"t":{"docs":{"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827}}},"f":{"docs":{},"t":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}},"s":{"docs":{},"s":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827}}}}}}}},"k":{"docs":{},"e":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}},":":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}}},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"(":{"docs":{},"x":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572}}},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}},")":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}}}}}}}},"k":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.017241379310344827},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.043596730245231606},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572}},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.005482456140350877},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.011206896551724138},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372}},"s":{"docs":{},".":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}},"y":{"docs":{},"b":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.01079136690647482},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":5.006430868167203}},"e":{"docs":{},",":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}},".":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.008403361344537815},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.004310344827586207},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.021798365122615803},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.008316008316008316},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}},"s":{"docs":{},".":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}},",":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}}}},"a":{"docs":{},":":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}}},"a":{"docs":{},"n":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},"e":{"docs":{},".":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547}}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.005482456140350877},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":10.03448275862069},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"unit-testing/":{"ref":"unit-testing/","tf":0.00974025974025974},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}},"r":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}},"v":{"docs":{},"e":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.004172461752433936},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.008174386920980926},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0034770514603616135},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}},":":{"docs":{"./":{"ref":"./","tf":0.006578947368421052},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.005172413793103448},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.006954102920723227}}},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0034770514603616135}}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}}}}}},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":5.069767441860465}}}}},"w":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}},"e":{"docs":{},"r":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0034770514603616135},"unit-testing/":{"ref":"unit-testing/","tf":0.00974025974025974},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.02286902286902287},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}},"(":{"docs":{},")":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968}},";":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.004867872044506259}}}}},")":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.006954102920723227}}}}}},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/":{"ref":"integration-testing/","tf":0.012345679012345678},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}},"e":{"docs":{},":":{"docs":{},"b":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}}}}}},"e":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},":":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.008316008316008316}},",":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}},".":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}},"w":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.006237006237006237}}}},"p":{"docs":{},"m":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.019801980198019802}},".":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.019801980198019802}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.01929260450160772}}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.005563282336578581}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}},"n":{"docs":{"./":{"ref":"./","tf":0.003289473684210526},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},".":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.010752688172043012},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}},"p":{"docs":{},"t":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}},"u":{"docs":{},"t":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.014388489208633094},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"'":{"docs":{},",":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547}}}},".":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}}}},"w":{"docs":{},"n":{"docs":{},".":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}},":":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}}}},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}}}}}}}},"x":{"docs":{},")":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}},")":{"docs":{},";":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}}}},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.008316008316008316}}},"]":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}},"s":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":5.008174386920981},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372}}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"integration-testing/":{"ref":"integration-testing/","tf":0.018518518518518517},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.01079136690647482},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/":{"ref":"unit-testing/","tf":0.016233766233766232},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},",":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}}},"e":{"docs":{},"s":{"docs":{},"'":{"docs":{},",":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}}}}}}}},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}},".":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}},":":{"docs":{"./":{"ref":"./","tf":0.009868421052631578},"integration-testing/":{"ref":"integration-testing/","tf":0.012345679012345678},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.017985611510791366},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.03361344537815126},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.01206896551724138},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.015994436717663423},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.013623978201634877},"unit-testing/":{"ref":"unit-testing/","tf":0.022727272727272728},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.02572347266881029},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.01011804384485666}}},",":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.006237006237006237}},".":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}},":":{"docs":{"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.00964630225080386}}},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}},"h":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494}}}}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}}}}}}}},"t":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508}},":":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}},"i":{"docs":{},"d":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"getting-started.html":{"ref":"getting-started.html","tf":0.0297029702970297},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.034482758620689655},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.004310344827586207},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.008316008316008316},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"'":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}},";":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.005563282336578581},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},";":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}}}}}}}}}}},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.006237006237006237}}},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"'":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.004310344827586207}}}},".":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"'":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}}}}},",":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901}}},"@":{"docs":{},"^":{"2":{"docs":{},".":{"0":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.019801980198019802}}},"docs":{}}},"docs":{}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}},"r":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.019801980198019802}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}}},"r":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901}},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.003289473684210526},"integration-testing/":{"ref":"integration-testing/","tf":0.018518518518518517},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}}},",":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}}},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}},";":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.010964912280701754},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.05172413793103448},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":5.01551724137931},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":5.02086230876217}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}},".":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827}}},"'":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}},":":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968}}}},".":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"f":{"6":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}},"docs":{}}}}}}},"g":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"f":{"docs":{},"g":{"docs":{},"t":{"4":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}},"docs":{}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.004310344827586207},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.01907356948228883},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}},"'":{"docs":{},",":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}},"y":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}},".":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.01079136690647482}}}},"o":{"docs":{},"r":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.01011804384485666}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"'":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.003289473684210526},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.00603448275862069},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.008174386920980926},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.018691588785046728},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286}},"'":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}},"(":{"docs":{},"{":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.014336917562724014},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.012605042016806723},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.006896551724137931},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.008344923504867872},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.01634877384196185},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364},"unit-testing/":{"ref":"unit-testing/","tf":0.012987012987012988},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.012861736334405145},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},",":{"docs":{"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}}},",":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.005563282336578581},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}},".":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}}}}}}},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}},"e":{"docs":{},":":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}}}}}}}}},":":{"docs":{"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"j":{"docs":{},"s":{"docs":{},".":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.014336917562724014},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},"e":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.01680672268907563}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}},"s":{"docs":{},"'":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}},"x":{"docs":{"./":{"ref":"./","tf":0.017543859649122806},"getting-started.html":{"ref":"getting-started.html","tf":0.1188118811881188},"integration-testing/":{"ref":"integration-testing/","tf":0.012345679012345678},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.020618556701030927},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.05172413793103448},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.015517241379310345},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.006258692628650904},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.03076923076923077},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.04158004158004158}},".":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}},"i":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"x":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},"e":{"docs":{},".":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.010395010395010396}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.016863406408094434}},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},":":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}}},".":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}},"o":{"docs":{},"r":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.01517706576728499}},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},":":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}},".":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.01425438596491228},"integration-testing/":{"ref":"integration-testing/","tf":0.030864197530864196},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.05154639175257732},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.014336917562724014},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.014388489208633094},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.029411764705882353},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.009482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.021557719054242003},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.013623978201634877},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.028037383177570093},"unit-testing/":{"ref":"unit-testing/","tf":0.00974025974025974},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.03007518796992481},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}},"s":{"docs":{},",":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}}}},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}},"p":{"docs":{},"o":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},"r":{"docs":{},"t":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464}}}}}},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.012474012474012475}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}},"u":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"integration-testing/":{"ref":"integration-testing/","tf":0.037037037037037035},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.014336917562724014},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.017985611510791366}},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"'":{"docs":{},",":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}}},",":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}},".":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}}}}}},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839}}}}},"'":{"docs":{},",":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.018691588785046728}}}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}},"(":{"docs":{},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}},"{":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}},":":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}},"r":{"docs":{},"e":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}},".":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}},"o":{"docs":{},"b":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.04276315789473684},"getting-started.html":{"ref":"getting-started.html","tf":0.10891089108910891},"integration-testing/":{"ref":"integration-testing/","tf":0.04938271604938271},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.030927835051546393},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.03942652329749104},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0539568345323741},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.06896551724137931},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.025},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.013908205841446454},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":5.037383177570093},"unit-testing/":{"ref":"unit-testing/","tf":0.04220779220779221},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.02572347266881029},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":5.047817047817047},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.05263157894736842},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.047217537942664416}},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}},")":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.008403361344537815},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.006258692628650904},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}},"s":{"docs":{},")":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}}}}},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}},".":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.008431703204047217}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"{":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"(":{"docs":{},"{":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"(":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}}}}}},"i":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"{":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}},"s":{"docs":{},"'":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.003289473684210526},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.00603448275862069},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.006258692628650904},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"'":{"docs":{},":":{"docs":{"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572}}}}}}},"'":{"docs":{"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}},";":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}}},"s":{"docs":{},"'":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}},".":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}}}},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.00964630225080386},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}},"v":{"docs":{},"e":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.019801980198019802},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.016863406408094434}},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},":":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.008403361344537815},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.005172413793103448},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.005563282336578581},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}},"(":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}}}},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.008403361344537815}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906}}},";":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906}}},";":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}}}}}}}}}}}}}}}}},"{":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372}}}}}}}}}}}}}},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}},".":{"docs":{"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.004310344827586207},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0076495132127955496},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}},"s":{"docs":{},"'":{"docs":{},";":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.004172461752433936}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}}}}}}},"'":{"docs":{},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}},":":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}}}},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827}}}}}},"t":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.01079136690647482},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},",":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}}}}},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},"l":{"docs":{},"i":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}}}}},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.003289473684210526},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}},"i":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}},"f":{"docs":{},"i":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827}}}}}}},"u":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.01079136690647482}},"e":{"docs":{},"d":{"docs":{},"'":{"docs":{},",":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}},":":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"t":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}},"h":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}},"f":{"docs":{"./":{"ref":"./","tf":0.003289473684210526},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},"i":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}},"a":{"docs":{},"w":{"docs":{},"n":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}},"(":{"docs":{},"[":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},",":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}}},"f":{"docs":{},"n":{"docs":{},",":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"n":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"(":{"docs":{},")":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.003289473684210526},"getting-started.html":{"ref":"getting-started.html","tf":5.00990099009901},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}},"t":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":10.016806722689076},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},".":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{},".":{"docs":{},"a":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}},";":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},";":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}}},"a":{"docs":{},"g":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}},"e":{"docs":{},";":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}}},";":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}},"'":{"docs":{},",":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.012605042016806723}}}},",":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.008403361344537815}}}},"i":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":5.00603448275862}}}}},"y":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}},"c":{"docs":{},"k":{"docs":{},".":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.008403361344537815}},"s":{"docs":{},"t":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.008431703204047217}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}}}}}},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"'":{"docs":{},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}},"h":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.012605042016806723},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.006237006237006237}}}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}},"s":{"docs":{},",":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}},"k":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.005482456140350877},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.017921146953405017},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.008403361344537815},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.004172461752433936},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}},"(":{"docs":{},"'":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"y":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},")":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"y":{"docs":{},"b":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.03076923076923077}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},")":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}},"(":{"docs":{},"'":{"docs":{},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"'":{"docs":{},",":{"docs":{"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"y":{"docs":{},"'":{"docs":{},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}}}}}}}}}},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}}},"i":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.012474012474012475}}}}}}},",":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}},":":{"docs":{"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286}}},"m":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},")":{"docs":{"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}}}}}}}}}},"s":{"docs":{},"k":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.044956140350877194},"getting-started.html":{"ref":"getting-started.html","tf":0.06930693069306931},"integration-testing/":{"ref":"integration-testing/","tf":5.04320987654321},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.06896551724137931},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.01810344827586207},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0076495132127955496},"unit-testing/":{"ref":"unit-testing/","tf":5.016233766233766},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.02494802494802495},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}}},"s":{"docs":{},"'":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"unit-testing/":{"ref":"unit-testing/","tf":0.012987012987012988},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.015384615384615385},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/":{"ref":"unit-testing/","tf":0.012987012987012988},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.00964630225080386},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}}},")":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.008316008316008316}},";":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},",":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},")":{"docs":{"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}}}}}}}}}}}}}}}}},".":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}},",":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464}}},"(":{"docs":{},"'":{"docs":{},"f":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}}}}}}},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}},"s":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}},"l":{"docs":{},"l":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}},"n":{"docs":{},"t":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508}}}},"m":{"docs":{},".":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.017241379310344827},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364}}},"'":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},",":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.0027247956403269754}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}},"s":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},",":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951},"unit-testing/":{"ref":"unit-testing/","tf":0.012987012987012988},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.012861736334405145},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724}},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},"]":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}}}}}}}}}}}}},"n":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}}},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.006237006237006237}},"e":{"docs":{},".":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.02158273381294964},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":5.010118043844857}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":10.03956834532374}},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}},":":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.007168458781362007},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}}}},")":{"docs":{},";":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}},")":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}},";":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}}}}},"o":{"docs":{},"o":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372}}}},"p":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372}},"'":{"docs":{},",":{"docs":{"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372}}}},")":{"docs":{},";":{"docs":{"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}}}}},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":5.0050590219224285}},",":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}},".":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}},"i":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951},"unit-testing/":{"ref":"unit-testing/","tf":0.00974025974025974},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}}},"u":{"docs":{},"e":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}},".":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}},",":{"docs":{"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572}}}}},"y":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},".":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}},"w":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}},".":{"docs":{"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.003215434083601286},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}},":":{"docs":{"./":{"ref":"./","tf":0.015350877192982455},"integration-testing/":{"ref":"integration-testing/","tf":0.012345679012345678},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.05017921146953405},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.02877697841726619},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.04201680672268908},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.013793103448275862},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.020166898470097356},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.021798365122615803},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.037383177570093455},"unit-testing/":{"ref":"unit-testing/","tf":0.02922077922077922},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.03215434083601286},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.011804384485666104}}},".":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}},"i":{"docs":{},"c":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.005482456140350877},"unit-testing/":{"ref":"unit-testing/","tf":5.0064935064935066}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547}}}}}},"p":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"e":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508}}}}}},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.0297029702970297}}}}}},".":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}},"s":{"docs":{"./":{"ref":"./","tf":0.008771929824561403},"getting-started.html":{"ref":"getting-started.html","tf":0.019801980198019802},"integration-testing/":{"ref":"integration-testing/","tf":0.018518518518518517},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.014336917562724014},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.01079136690647482},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.012605042016806723},"integration-testing/mocking/":{"ref":"integration-testing/mocking/","tf":0.034482758620689655},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.00603448275862069},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.008174386920980926},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364},"unit-testing/effect-creators.html":{"ref":"unit-testing/effect-creators.html","tf":0.03076923076923077},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.031185031185031187},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.01011804384485666}},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.00603448275862069},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.006954102920723227},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.010899182561307902}},"'":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}}}},":":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906}}},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508}},"(":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}}}},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}}},"d":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}},".":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}},"v":{"0":{"docs":{},".":{"1":{"2":{"docs":{},".":{"0":{"docs":{},",":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}},"docs":{}}},"4":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901}},",":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.019801980198019802}}},".":{"0":{"docs":{},".":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}},"docs":{}}},"5":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.0297029702970297}}},"docs":{}},"docs":{}}},"2":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901}}},"3":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.019801980198019802}}},"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"./":{"ref":"./","tf":0.0043859649122807015},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.009735744089012517},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.03007518796992481},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}},";":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}},"s":{"docs":{},".":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}},")":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}},";":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.004158004158004158}}}}}}},"r":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}}},"i":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.020618556701030927},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0034770514603616135},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.008174386920980926}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}},"i":{"docs":{},"t":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.007194244604316547}}}},"r":{"docs":{},"n":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.02158273381294964}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}},"s":{"docs":{},",":{"docs":{"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}}}}}},"y":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"v":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.003372681281618887}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.010899182561307902}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.012605042016806723}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.008403361344537815}}}}}}}},"n":{"docs":{},"s":{"docs":{},"'":{"docs":{},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0034482758620689655},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.009345794392523364},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"s":{"docs":{},"!":{"docs":{},"'":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}}}}},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.008174386920980926}}}},"l":{"docs":{},"d":{"docs":{},"'":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},")":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.0035971223021582736}}}}},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}},"e":{"docs":{},".":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.009900990099009901}}}}}}},"l":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}},"x":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"unit-testing/":{"ref":"unit-testing/","tf":0.00974025974025974},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}},"y":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"unit-testing/":{"ref":"unit-testing/","tf":0.00974025974025974},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572}},")":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.023026315789473683},"integration-testing/":{"ref":"integration-testing/","tf":0.024691358024691357},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.03942652329749104},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.014388489208633094},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.029411764705882353},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.02327586206896552},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.027816411682892908},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.021798365122615803},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.046511627906976744},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.028037383177570093},"unit-testing/":{"ref":"unit-testing/","tf":0.03571428571428571},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.04180064308681672},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.02494802494802495},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.045112781954887216},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.03709949409780776}},"s":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754}}},".":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}}},";":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}},"*":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}},")":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}}}}},"o":{"docs":{},"u":{"docs":{},"'":{"docs":{},"l":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}},"r":{"docs":{"./":{"ref":"./","tf":0.0021929824561403508},"getting-started.html":{"ref":"getting-started.html","tf":0.019801980198019802},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.005449591280653951}}}},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}}}}}},".":{"docs":{"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.002079002079002079}}}}},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"getting-started.html":{"ref":"getting-started.html","tf":0.039603960396039604}}}}},",":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572}}}},"{":{"docs":{"./":{"ref":"./","tf":0.03837719298245614},"integration-testing/":{"ref":"integration-testing/","tf":0.024691358024691357},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.030927835051546393},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.035842293906810034},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.025179856115107913},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.0546218487394958},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.03879310344827586},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.06328233657858136},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.04904632152588556},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.06976744186046512},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.056074766355140186},"unit-testing/":{"ref":"unit-testing/","tf":0.03571428571428571},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.06752411575562701},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.02494802494802495},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.06015037593984962},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.03035413153456998}},"}":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.01011804384485666}}}},"}":{"docs":{"./":{"ref":"./","tf":0.01864035087719298},"integration-testing/":{"ref":"integration-testing/","tf":0.018518518518518517},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.017921146953405017},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.01079136690647482},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.025210084033613446},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.02413793103448276},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.03824756606397774},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.021798365122615803},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.046511627906976744},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.028037383177570093},"unit-testing/":{"ref":"unit-testing/","tf":0.02922077922077922},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.06109324758842444},"unit-testing/saga-helpers.html":{"ref":"unit-testing/saga-helpers.html","tf":0.02494802494802495},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.045112781954887216},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.03035413153456998}},")":{"docs":{"./":{"ref":"./","tf":0.010964912280701754},"integration-testing/":{"ref":"integration-testing/","tf":0.006172839506172839},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.025089605734767026},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.02158273381294964},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.029411764705882353},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.006896551724137931},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.020166898470097356},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.013623978201634877},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.028037383177570093},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.006745362563237774}},",":{"docs":{"./":{"ref":"./","tf":0.0010964912280701754},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0013908205841446453}}},";":{"docs":{"./":{"ref":"./","tf":0.009868421052631578},"integration-testing/":{"ref":"integration-testing/","tf":0.012345679012345678},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.05017921146953405},"integration-testing/timeout.html":{"ref":"integration-testing/timeout.html","tf":0.025179856115107913},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.025210084033613446},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.013793103448275862},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.01808066759388039},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.02997275204359673},"integration-testing/negated-assertions.html":{"ref":"integration-testing/negated-assertions.html","tf":0.023255813953488372},"integration-testing/forked-sagas.html":{"ref":"integration-testing/forked-sagas.html","tf":0.037383177570093455},"unit-testing/":{"ref":"unit-testing/","tf":0.016233766233766232},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.01607717041800643},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203},"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.00505902192242833}}}},",":{"docs":{"./":{"ref":"./","tf":0.005482456140350877},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.004201680672268907},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.00603448275862069},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.01808066759388039},"integration-testing/partial-matching.html":{"ref":"integration-testing/partial-matching.html","tf":0.013623978201634877}}},";":{"docs":{"./":{"ref":"./","tf":0.007675438596491228},"integration-testing/effect-creators.html":{"ref":"integration-testing/effect-creators.html","tf":0.010309278350515464},"integration-testing/state.html":{"ref":"integration-testing/state.html","tf":0.012605042016806723},"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.002586206896551724},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0034770514603616135},"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572},"unit-testing/general-assertions.html":{"ref":"unit-testing/general-assertions.html","tf":0.007518796992481203}}},"]":{"docs":{},",":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"integration-testing/dispatching.html":{"ref":"integration-testing/dispatching.html","tf":0.0035842293906810036}}}}}}}}}},")":{"docs":{},";":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0027816411682892906}}},",":{"docs":{"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.0006954102920723226}}}},":":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968}}},">":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0008620689655172414}}},"?":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"integration-testing/mocking/dynamic-providers.html":{"ref":"integration-testing/mocking/dynamic-providers.html","tf":0.002086230876216968}}},"z":{"docs":{"integration-testing/mocking/static-providers.html":{"ref":"integration-testing/mocking/static-providers.html","tf":0.0017241379310344827},"unit-testing/":{"ref":"unit-testing/","tf":0.003246753246753247}},")":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572}},";":{"docs":{"unit-testing/":{"ref":"unit-testing/","tf":0.006493506493506494},"unit-testing/error-messages.html":{"ref":"unit-testing/error-messages.html","tf":0.006430868167202572}}}}},"%":{"docs":{},"=":{"docs":{"unit-testing/time-travel.html":{"ref":"unit-testing/time-travel.html","tf":0.0016863406408094434}}}}},"length":2686},"corpusTokens":["%=","'@@redux","'add',","'age_after';","'age_before';","'bar'","'bar',","'baz'","'befor","'data',","'done'","'done',","'error',","'fail_user'","'fail_user',","'foo'","'foo')","'foo');","'foo',","'forked'","'have_birthday';","'hello","'hello'","'hello');","'hello',","'hi'","'jeremy',","'john","'mi","'ready',","'receive_user',","'redux","'request_user'","'request_user',","'take_every'","'test'","'timeout'","'tucker'","'tucker',","'tucker';","'tucker'],","'update_dog';","'user',","'world'","(","()","(action.typ","(array","(default","(e)","(effect.fn","(fn","(i.e.","(label","(or","(predicate)","(selector","(token)","(true)","(user)","({","),",");","*","**","*becaus","*to","+","...args)","...state,","...state.dog,",".back()",".back(2)",".call(api.updatedog,",".call(identity,",".call.fn(api.fetchuser)",".call.like({",".delay()",".delay(250)",".dispatch({",".finish()",".finish(42)",".fork(othersaga)",".inspect((fn)",".is(42)",".is({",".isdone()",".isdone();",".next()",".next(action)",".next(false)",".next(true)",".not.call.fn(api.settoken)",".provide([",".provide({",".put({",".put.actiontype('fail_user')",".put.like({",".restart('hello",".restart()",".returns(42);",".returns({",".run();",".run(500);",".run(false);",".run({",".save('befor",".select(getpredicate)",".select(getpredicate);",".take('error')",".take('false')",".take('hello')",".take('ready')",".take('true')",".take('world');",".takeevery('ready',",".takeeveryfork('ready',",".throw(error)",".withreducer(dogreducer)",".withreducer(dogreducer,",".withreducer(reducer)",".withstate(storestate)",".withstate({})","//","1","1)","1);","1,","1.","101;","11","11,","11;","11],","12","12,","2","2)","2);","2,","20","20);","21);","250","250m","2;","3","300);","300ms,","4","4);","40,","42","42)","42),","42);","42,","42;","42],","43","43,","500),","500;","500m","6","6);","8);",":","=","===","=>",">","?","[","['tucker',","[a]","[buffer])","[call(api.fetchuser,","[function:","[id]","[matchers.call.fn(add2),","[matchers.call.fn(api.fetchpet),","[matchers.call.fn(api.fetchuser),","[matchers.call.fn(api.finddog),","[matchers.call.fn(api.finduser),","[name,","[select(selectors.getage),","[select(selectors.getid),","[select(selectors.getname),","[select(selectors.getotherdata),","])","]);","];","`'hello'`","`2`","`action`","`call.fn`","`call`","`else`","`identity`","`next()`","`othersaga`!","`put`","`select`","`take`","`take`.","able.","accord","action","action',","action)","action);","action.","action.payload","action.payload);","action.payload;","action.type.","action:","actionchannel","actionchannel(pattern,","actionchannel.","actionchannel.pattern","actions',","actions,","actions.","actiontyp","actual","ad","add","add2","addit","additionally,","adjust","advanc","ag","against.","age:","age]","age_aft","age_after,","age_befor","age_before,","ageaft","agebefor","agnost","aim","all([","all([...effects])","all,","all:","allow","along","altern","alternatively,","alway","anothersaga","anothersaga(action)","anothersaga,","anothersaga]","any)","api","api';","api)","api.fetchus","api.fetchuser)","api.finddog","api.findus","apis.","appli","applic","application.","apply(context,","apply.fn","approach","approach,","appropri","arg","args)","args:","argument","argument(s)","argument.","arguments,","arguments.","arguments:","array","array',","array)","array.","arrays',","arrays.","assert","assertion.","assertion.cal","assertion.don't","assertions!","assertions,","assertions.","assertions:","asynchron","asynchronous.","asynchronously,","attempt","authsaga()","automat","avail","available,","back","back(n?:","bail","bar:","base","be","becom","befor","before.","beforehand.","begin","behalf","behavior","below","below,","below:","benefici","benefit","besid","between","block","bonu","bootstrap","both","bother","branch","break","breeze.","brittl","buffer","call","call',","call()","call([console.log,","call([context,","call(add2,","call(api.fetchpet,","call(api.fetchuser);","call(api.fetchuser,","call(api.finddog);","call(api.findgreeting);","call(api.finduser,","call(api.settoken,","call(api.updatedog,","call(delay,","call(effect,","call(fn,","call(identity,","call(itwasfalse);","call(itwastrue);","call({","call,","call.fn","call:","callback","callback.","can't","cancel","cancel(task)","cancelled()","case","case,","cases,","catch","caveat","certain","chain","chainabl","chang","change,","channel:","check","choos","come","common","complet","complete.","completes.","compos","composed,","composeprovid","composeproviders(","concern","consol","console],","const","contain","content","contribut","contriv","control","conveni","correct","coupl","cover","covered.","cp","cps([context,","cps(fn,","cps.fn","creat","creator","creator*:","creator.","creators.","current","custom","data","data:","decid","deep","default","default_timeout","delay","delay(250).then(()","delaying,","deleg","delegating,","delegation,","delegations.","depend","deprec","deprecated:","descript","despit","determinist","dev","differ","difference.","directli","directly,","dispatch","distinguish","doc","docs.","doe'","doesn't","dog","dog);","dog,","dog:","dogreducer(st","don't","done","down","downsid","dure","dynam","dynamic(providedoubleif6)],","dynamic(providetripleifgt4)],","e","each","earli","easi","easier","easiest","easili","easy.","effect","effect,","effect.","effect.args[0];","effect:","effects,","effects.","effortless.","element","embrac","encourag","end","end.","ensur","entir","environ","equal","equival","error","error');","error('error');","error('mi","error('not","error('whoops...');","error,","error.","error:","error;","errors',","es2015","es5","especi","essentially,","etc.","even","eventu","exact","exampl","example,","example:","expect","expect(fn()).tobe(42);","expectsaga","expectsaga(authsaga)","expectsaga(forkingsaga)","expectsaga(mainsaga)","expectsaga(mainsaga);","expectsaga(mainsaga,","expectsaga(saga)","expectsaga(saga,","expectsaga(sagawithtakeevery)","expectsaga(somesaga)","expectsaga(spawningsaga)","expectsaga(usersaga)","expectsaga(usersaga,","expectsaga,","expectsaga.","expectsaga.default_timeout","export","extract","fail","fail,","fail_us","failed:","failur","fake","fakedog","fakedog,","fakedog],","fakeotherdata","fakeotherdata,","fakeotherdata],","fakeus","fakeuser,","fakeuser;","fakeuser],","fals","fast","favorit","featur","features,","fetchuser:","fetchusersaga()","final","finally,","fine","finish","finish(arg?:","first","flavor","flavors.","flexibl","flow","flush","flush(channel)","fn","fn,","fn.","fn:","fn],","follow","foo:","forc","fork","fork([context,","fork(fetchusersaga);","fork(fn,","fork(othersaga);","fork(othersaga,","fork,","fork.fn","forked/spawn","forkingsaga()","forward","forward,","found');","framework,","framework.","function","function*","function,","function.","further","future.","gener","generator.","get","getage(state)","getdata(state)","getdog","getfinalpayload()","getpredicate()","give","global","go","good","grained,","great","greater","greet","greeting',","greeting,","greeting:","guarante","had.","handl","handler","happen.","have_birthday","have_birthday)","hello:","helper","helperdeprec","helpers,","here","here'","here.","histori","history.","hook","i'll","id","id),","id);","id,","id:","idea","identity(value)","if/els","immedi","implementation.","implicit","import","includ","infinit","initi","initialdog","initialdog)","initialdog,","initialst","initialstate,","insid","inspect","inspect.","instal","instead","integr","intercept","interest","intermediari","intern","internally,","introduct","invok","is,","isdon","isdone,","it('can","it('do","it('fails',","it('fetch","it('fork","it('handl","it('just","it('nev","it('provid","it('put","it('return","it('tak","it('takeeveri","it('tim","it('work","it).","it.","iter","itwasfalse()","itwastrue()","javascript","jest","jest,","join","join(task)","jump","keep","key","kind","know","knowledg","label","label.","labori","laborious,","latest","layer","left","length","length',","length.","less","let","level","library.","like,","like:","liter","literal.","long.","look","loop","loop,","loopingsaga()","loops,","main","mainsaga()","mainsaga(x)","mainsaga(x,","make","manag","manner","match","match,","matcher","matchers.","matching.","mayb","mean","mentioned,","messag","message,","message.","meta:","method","method.","methods,","methods.","middlewar","middleware.","milliseconds.","minim","mock","modul","module,","module.","more","move","multipl","name","name,","name:","necessarili","need","needed.","negat","never","new","newer","next","next()","next();","next)","non","nondeterminist","normal","normal,","normal.","note","note:","notic","notice:becaus","notice:deleg","now","npm","npm.","null,","number","number)","object","offer","on","on.","opt","option","order","order,","origin","otherdata","otherdata:","othersaga()","othersaga(action,","othersaga(x)","othersaga);","othersaga,","othersaga]","out","out',","out.","overrid","overwritten","own.","pair","pair,","pairs)","parallel","parameter.","partial","particular","pass","pass,","passes',","path","pattern","pattern,","pattern.","pattern:","payload","payload,","payload.","payload:","perfect","perform","perspect","pet","pet:","petid:","phantomjs.","plan","plan'","plan').testsaga;","plan';","plan,","plan.","plan/match","plan/matchers';","plan/matchers.","plan/provid","plan/providers';","plan@^2.0","pleas","point","point,","port","possibl","pr","predic","predicate'","predicate')","previou","print","prior","prior)","probabl","problems.","produc","promis","promise((resolve)","promise(resolv","promise,","promise.","promise;","properti","properties',","properties.","property,","property.","provid","provide.","providedog","providedoubleif6","provideotherdata","provideotherdata,","provider,","provider:","providers',","providers,","providers.","providetripleifgt4","provideus","provideuser,","purpos","put","put'","put(action)","put(channel,","put({","put,","put.","put.actiontyp","put.actiontype:","put.resolv","put.resolve(action)","put.resolve,","put.resolve.actiontyp","put:","queue","quickly.","race","race(effects)","race({","race,","race:","rare","reach","receiv","receive_us","reduc","reducer(st","reducers',","redux","redux.","refer","regard","regardless","reject","remov","renam","reorder","repo","report","request_us","requir","require('redux","resolv","resolve.","respect","respectively.","respons","restart","restart(...args:","restart.","restarted,","restor","restore(label:","restore.","retriev","return","returns,","reuse,","review","right","right.","robust","run","run.","runner","running',","running,","running.","runs',","runsaga","safe","saga","saga'","saga',","saga';","saga()","saga(api)","saga(id)","saga(s)","saga,","saga.","saga.dispatch({","saga.next().call(identity,","saga.next().fork(othersaga);","saga.next().isdone();","saga.next().take('hello');","saga.next().take('hi');","saga.next(action).put({","saga.put({","saga.run({","saga/effect","saga/effects';","saga/effects,","saga/io':","sagas',","sagas.","sagatesterror:","sagawithtakeevery()","sagawrapp","same","same.","save","save(label:","scenario","second","seen","select","select(authtoken);","select(getage);","select(getdata);","select(getdog);","select(getfinalpayload);","select(getpredicate);","select(selector,","select(selectors.getage),","select(selectors.getage);","select(selectors.getid);","select(selectors.getname),","select(selectors.getname);","select(selectors.getotherdata);","select({","select,","select.","select.selector","select:","selector","selector',","selectors';","selectors.getage)","selectors.getname)","selectors.getotherdata","sequenc","server","set","settimeout(resolve,","shallow","shouldn't","show","silenc","silenced',","silencetimeout","silencetimeout:","similar","similarli","simpl","simpler,","simpli","simplifi","simul","situat","skip","somesaga()","someth","sometim","spawn","spawn([context,","spawn(fetchusersaga);","spawn(fn,","spawn.fn","spawningsaga()","special","specif","specifi","stack.","start","state","state',","state,","state.","state.ag","state.age;","state.data;","state.dog.ag","state.dog;","state;","static","stay","step","still","store","storest","storestate.data","string)","subsequ","succeeds',","successfulli","such","suggest","suggestions,","suggests,","summari","suppli","support","tabl","take","take('bar');","take('error');","take('false');","take('foo');","take('hello');","take('ready');","take('request_user');","take('true');","take('world');","take(channel)","take(have_birthday);","take(pattern)","take(update_dog);","take,","take.mayb","take.maybe(channel)","take.maybe(pattern)","take:","takeeveri","takeevery('ready',","takeevery('take_every',","takeevery,","takeevery.","takeeveryeffect","takeeveryeffect,","takeeveryfork","takeeveryfork,","takelatest","takelatest,","takelatesteffect,","takelatesteveryeffect","takelatestfork","takelatestfork,","takem(channel)","takem(pattern)","task","tell","tent","termin","ters","test","test('fetch","test('timeout","test,","test.","testing,","tests',","tests.","testsaga","testsaga(loopingsaga);","testsaga(mainsaga)","testsaga(mainsaga);","testsaga(mainsaga,","testsaga(othersaga,","testsaga(saga)","them',","them.","then,","therefore,","thing","this,","those","though","though,","throttl","throttle.","throttleeffect","throttlefork","through","throw","throwerror","throwerror(error)],","thrown","time","time))","time));","time);","timeout","timeout.","timeout:","to,","togeth","token","token',","token);","too.","top","travel","travel,","travel.","tri","true","true,","true.","try/catch.","tupl","two","two.","type","type,","type.","type:","typic","undefin","under","unit","until","up","up.","updat","update_dog","updatedog()","upgrad","us","used,","used.","user","user',","user,","user.petid);","user:","usersaga","usersaga()","usersaga(api)","usersaga(id)","usersaga.","v0.12.0,","v0.14","v0.14,","v0.14.0.","v0.15","v2","v3","valu","value)","value);","value,","value.","value;","values.","var","variable,","version","via","wait","want","warn","warning:","warnings,","way","welcom","welcome.","well","whatev","whether","wins',","without","withreduc","withstat","won't","work","work,","works!',","world'","world')","worri","wouldn't","wrap","x","y","y)","y,","yarn","yield","yield*","yield*)","yields,","yields.","yields;","you'll","you'r","you.","yourself,","z","z)","z);","{","{}","}","})","}),","});","},","};","}],"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"Redux Saga Test Plan\n\n\n\nTest Redux Saga with an easy plan.\nRedux Saga Test Plan makes testing sagas a breeze. Whether you need to test\nexact effects and their ordering or just test your saga put's a specific\naction at some point, Redux Saga Test Plan has you covered.\nRedux Saga Test Plan aims to embrace both unit testing and integration testing\napproaches to make testing your sagas easy.\nIntegration Testing\nRequires global Promise to be available\nOne downside to unit testing sagas is that it couples your test to your\nimplementation. Simple reordering of yielded effects in your saga could break\nyour tests even if the functionality stays the same. If you're not concerned\nwith the order or exact effects your saga yields, then you can take a\nintegrative approach, testing the behavior of your saga when run by Redux Saga.\nThen, you can simply test that a particular effect was yielded during the saga\nrun. For this, use the expectSaga test function.\nSimple Example\nImport the expectSaga function and pass in your saga function as an argument.\nAny additional arguments to expectSaga will become arguments to the saga\nfunction. The return value is a chainable API with assertions for the different\neffect creators available in Redux Saga.\nIn the example below, we test that the userSaga successfully puts a\nRECEIVE_USER action with the fakeUser as the payload. We call expectSaga\nwith the userSaga and supply an api object as an argument to userSaga. We\nassert the expected put effect via the put assertion method. Then, we call\nthe dispatch method with a REQUEST_USER action that contains the user id\npayload. The dispatch method will supply actions to take effects. Finally,\nwe start the test by calling the run method which returns a Promise. Tests\nwith expectSaga will always run asynchronously, so the returned Promise\nresolves when the saga finishes or when expectSaga forces a timeout. If you're\nusing a test runner like Jest, you can return the Promise inside your Jest\ntest so Jest knows when the test is complete.\nimport { call, put, take } from 'redux-saga/effects';\nimport { expectSaga } from 'redux-saga-test-plan';\n\nfunction* userSaga(api) {\n  const action = yield take('REQUEST_USER');\n  const user = yield call(api.fetchUser, action.payload);\n\n  yield put({ type: 'RECEIVE_USER', payload: user });\n}\n\nit('just works!', () => {\n  const api = {\n    fetchUser: id => ({ id, name: 'Tucker' }),\n  };\n\n  return expectSaga(userSaga, api)\n    // Assert that the `put` will eventually happen.\n    .put({\n      type: 'RECEIVE_USER',\n      payload: { id: 42, name: 'Tucker' },\n    })\n\n    // Dispatch any actions that the saga will `take`.\n    .dispatch({ type: 'REQUEST_USER', payload: 42 })\n\n    // Start the test. Returns a Promise.\n    .run();\n});\n\nMocking with Providers\nexpectSaga runs your saga with Redux Saga, so it will try to resolve effects\njust like Redux Saga would in your application. This is great for integration\ntesting, but sometimes it can be laborious to bootstrap your entire application\nfor tests or mock things like server APIs. In those cases, you can use\nproviders which are perfect for mocking values directly with expectSaga.\nProviders are similar to middleware that allow you to intercept effects before\nthey reach Redux Saga. You can choose to return a mock value instead of allowing\nRedux Saga to handle the effect, or you can pass on the effect to other\nproviders or eventually Redux Saga.\nexpectSaga has two flavors of providers, static providers and dynamic\nproviders. Static providers are easier to compose and reuse, but dynamic\nproviders give you more flexibility with non-deterministic effects. Here is one\nexample below using static providers. There are more examples of providers in\nthe\ndocs.\nimport { call, put, take } from 'redux-saga/effects';\nimport { expectSaga } from 'redux-saga-test-plan';\nimport * as matchers from 'redux-saga-test-plan/matchers';\nimport { throwError } from 'redux-saga-test-plan/providers';\nimport api from 'my-api';\n\nfunction* userSaga() {\n  try {\n    const action = yield take('REQUEST_USER');\n    const user = yield call(api.fetchUser, action.payload);\n    const pet = yield call(api.fetchPet, user.petId);\n\n    yield put({\n      type: 'RECEIVE_USER',\n      payload: { user, pet },\n    });\n  } catch (e) {\n    yield put({ type: 'FAIL_USER', error: e });\n  }\n}\n\nit('fetches the user', () => {\n  const fakeUser = { name: 'Jeremy', petId: 20 };\n  const fakeDog = { name: 'Tucker' };\n\n  return expectSaga(userSaga, api)\n    .provide([\n      [call(api.fetchUser, 42), fakeUser],\n      [matchers.call.fn(api.fetchPet), fakeDog],\n    ])\n    .put({\n      type: 'RECEIVE_USER',\n      payload: { user: fakeUser, pet: fakeDog },\n    })\n    .dispatch({ type: 'REQUEST_USER', payload: 42 })\n    .run();\n});\n\nit('handles errors', () => {\n  const error = new Error('error');\n\n  return expectSaga(userSaga, api)\n    .provide([\n      [matchers.call.fn(api.fetchUser), throwError(error)],\n    ])\n    .put({ type: 'FAIL_USER', error })\n    .dispatch({ type: 'REQUEST_USER', payload: 42 })\n    .run();\n});\n\nNotice we pass in an array of tuple pairs (or array pairs) that contain a\nmatcher and a fake value. You can use the effect creators from Redux Saga or\nmatchers from the redux-saga-test-plan/matchers module to match effects. The\nbonus of using Redux Saga Test Plan's matchers is that they offer special\npartial matchers like call.fn which matches by the function without worrying\nabout the specific args contained in the actual call effect. Notice in the\nsecond test that we can also simulate errors with the throwError function from\nthe redux-saga-test-plan/providers module. This is perfect for simulating\nserver problems.\nExample with Reducer\nOne good use case for integration testing is testing your reducer too. You can\nhook up your reducer to your test by calling the withReducer method with your\nreducer function.\nimport { call, select, take } from 'redux-saga/effects';\nimport { expectSaga } from 'redux-saga-test-plan';\n\nconst HAVE_BIRTHDAY = 'HAVE_BIRTHDAY';\nconst UPDATE_DOG = 'UPDATE_DOG';\n\nconst initialState = {\n  dog: {\n    name: 'Tucker',\n    age: 11,\n  },\n};\n\nfunction reducer(state = initialState, action) {\n  if (action.type === HAVE_BIRTHDAY) {\n    return {\n      ...state,\n      dog: {\n        ...state.dog,\n        age: state.dog.age + 1,\n      },\n    };\n  }\n\n  return state;\n}\n\nconst getDog = state => state.dog;\n\nfunction* saga(api) {\n  yield take(UPDATE_DOG);\n  const dog = yield select(getDog);\n  yield call(api.updateDog, dog);\n}\n\nit('handles reducers', () => {\n  const api = { updateDog() {} };\n\n  return expectSaga(saga, api)\n    .withReducer(reducer)\n\n    .call(api.updateDog, {\n      name: 'Tucker',\n      age: 12,\n    })\n\n    .dispatch({ type: HAVE_BIRTHDAY })\n    .dispatch({ type: UPDATE_DOG })\n\n    .run();\n});\n\nUnit Testing\nIf you want to ensure that your saga yields specific types of effects in a\nparticular order, then you'll want to use the testSaga function. Here's a\nsimple example:\nimport { testSaga } from 'redux-saga-test-plan';\n\nfunction identity(value) {\n  return value;\n}\n\nfunction* mainSaga(x, y) {\n  const action = yield take('HELLO');\n\n  yield put({ type: 'ADD', payload: x + y });\n  yield call(identity, action);\n}\n\nconst action = { type: 'TEST' };\n\nit('works with unit tests', () => {\n  testSaga(mainSaga, 40, 2);\n    // advance saga with `next()`\n    .next()\n\n    // assert that the saga yields `take` with `'HELLO'` as type\n    .take('HELLO')\n\n    // pass back in a value to a saga after it yields\n    .next(action)\n\n    // assert that the saga yields `put` with the expected action\n    .put({ type: 'ADD', payload: 42 })\n\n    .next()\n\n    // assert that the saga yields a `call` to `identity` with\n    // the `action` argument\n    .call(identity, action)\n\n    .next()\n\n    // assert that the saga is finished\n    .isDone();\n});\n\nTable of Contents\n\nIntroduction\nGetting Started\nIntegration Testing\nEffect Creator Assertions\nDispatching\nTimeout\nState\nMocking\nStatic Providers\nDynamic Providers\n\n\nPartial Assertions\nNegated Assertions\nForked Sagas\n\n\nUnit Testing\nError Messages\nEffect Creators\nSaga Helpers\nGeneral Assertions\nTime Travel\n\n\n\n"},"getting-started.html":{"url":"getting-started.html","title":"Getting Started","keywords":"","body":"Getting Started\nInstall\nRedux Saga v0.15\nThe current version of Redux Saga Test Plan v3 only supports v0.15\nof Redux Saga.\nInstall with yarn or npm.\nyarn add redux-saga-test-plan --dev\nnpm install --save-dev redux-saga-test-plan\nRedux Saga v0.14\nIf you're still using Redux Saga v0.14, the\nupgrade to\nv0.15 should be effortless.\nIf you can't upgrade from v0.14, though, then you can use the latest v2 of\nRedux Saga Test Plan.\nNOTE: newer features will likely only be added to v3 of Redux Saga Test\nPlan, so you should upgrade Redux Saga if you're able. I can't guarantee that\nI'll have time to back port features, but back port PRs are welcome.\nInstall with yarn or npm.\nyarn add redux-saga-test-plan@^2.0 --dev\nnpm install --save-dev redux-saga-test-plan@^2.0\n"},"integration-testing/":{"url":"integration-testing/","title":"Integration Testing","keywords":"","body":"Integration Testing\nRequires global Promise to be available\nFor integration testing, Redux Saga Test Plan exports an expectSaga function\nthat returns an API for asserting that a saga yields certain effects. To use\nexpectSaga, pass in your generator function as the first argument. Pass in\nadditional arguments which will be the arguments passed on to the generator\nfunction.\nexpectSaga runs your saga with Redux Saga's runSaga function, so it will run\njust like it would in your application. This also means your saga will likely\nrun asynchronously, so expectSaga will also be asynchronous.\nAfter calling expectSaga on your saga and making some assertions, you can\nstart the saga with the run method. The run method will return a Promise,\nthat you can then use with your favorite testing framework. If any assertions\nfail, then expectSaga will reject the returned Promise. If all assertions\npass, then the Promise will resolve.\nLook at the example below that uses Jest as\nthe testing framework. Notice that we return the Promise so Jest knows when\nthe test completes. Also notice that we don't even have to bother testing the\ncall effect with expectSaga.\nimport { call, put } from 'redux-saga/effects';\nimport { expectSaga } from 'redux-saga-test-plan';\n\nfunction* mainSaga(x, y) {\n  yield call([console.log, console], 'hello');\n  yield put({ type: 'ADD', payload: x + y });\n}\n\nit('puts an ADD action', () => {\n  return expectSaga(mainSaga, 40, 2)\n    // assert that the saga will eventually yield `put`\n    // with the expected action\n    .put({ type: 'ADD', payload: 42 })\n\n    // run it\n    .run();\n});\n\n"},"integration-testing/effect-creators.html":{"url":"integration-testing/effect-creators.html","title":"Effect Creator Assertions","keywords":"","body":"Effect Creator Assertions\nThe expectSaga API has assertions for most of the effect creators available in\nRedux Saga. You can reference effect creators in Redux Saga's docs\nhere.\n\ntake(pattern)\ntake.maybe(pattern)\nput(action)\nput.resolve(action)\ncall(fn, ...args)\ncall([context, fn], ...args)\napply(context, fn, args)\ncps(fn, ...args)\ncps([context, fn], ...args)\nfork(fn, ...args)\nfork([context, fn], ...args)\nspawn(fn, ...args)\nspawn([context, fn], ...args)\njoin(task)\nselect(selector, ...args)\nactionChannel(pattern, [buffer])\nrace(effects)\n\nYou can assert the return value of a saga via the returns method. This only\nworks for the top-level saga under test, meaning other sagas that are invoked\nvia call, fork, or spawn won't report their return value.\nfunction* saga() {\n  return { hello: 'world' };\n}\n\nit('returns a greeting', () => {\n  return expectSaga(saga)\n    .returns({ hello: 'world' })\n    .run();\n});\n\n"},"integration-testing/dispatching.html":{"url":"integration-testing/dispatching.html","title":"Dispatching","keywords":"","body":"Dispatching Actions\nMost sagas use the take effect to wait on Redux actions. Because expectSaga\nruns your saga as normal, it will block on yielded take effects. To ensure\nyour saga can keep running, expectSaga also has a dispatch method. Before\nrunning your saga, dispatch any actions you expect your saga to take in the\norder it takes them. Internally, expectSaga will queue the actions and\ndispatch them on your behalf as needed.\nimport { put } from 'redux-saga/effects';\nimport { expectSaga } from 'redux-saga-test-plan';\n\nfunction* mainSaga(x, y) {\n  yield take('HELLO');\n  yield put({ type: 'ADD', payload: x + y });\n  yield take('WORLD');\n  yield put({ type: 'DONE' });\n}\n\nit('handles dispatching actions', () => {\n  return expectSaga(mainSaga, 40, 2)\n    // note that assertions don't have to be in order\n    .put({ type: 'DONE' })\n    .put({ type: 'ADD', payload: 42 })\n\n    // dispatch any actions your saga will `take`\n    // dispatched actions MUST be in order\n    .dispatch({ type: 'HELLO' })\n    .dispatch({ type: 'WORLD' })\n\n    .run();\n});\n\nDispatch actions while saga is running\nYou can also dispatch actions while a saga is running. This is useful for\ndelaying actions so Redux Saga Test Plan doesn't dispatch them too quickly.\nfunction* mainSaga() {\n  // Received almost immediately\n  yield take('FOO');\n\n  // Received after 250ms\n  yield take('BAR');\n  yield put({ type: 'DONE' });\n}\n\nconst delay = time => new Promise((resolve) => {\n  setTimeout(resolve, time);\n});\n\nit('can dispatch actions while running', () => {\n  const saga = expectSaga(mainSaga);\n\n  saga.put({ type: 'DONE' });\n\n  saga.dispatch({ type: 'FOO' });\n\n  const promise = saga.run({ timeout: false });\n\n  return delay(250).then(() => {\n    saga.dispatch({ type: 'BAR' });\n    return promise;\n  });\n});\n\nDelaying dispatching actions with .delay()\nWhile being able to dispatch actions while the saga is running has use cases\nbesides only delaying, if you just want to delay dispatched actions, you can use\nthe delay method. It takes a delay time as its only argument.\nfunction* mainSaga() {\n  // Received almost immediately\n  yield take('FOO');\n\n  // Received after 250ms\n  yield take('BAR');\n  yield put({ type: 'DONE' });\n}\n\nit('can delay actions', () => {\n  return expectSaga(mainSaga)\n    .put({ type: 'DONE' })\n    .dispatch({ type: 'FOO' })\n    .delay(250)\n    .dispatch({ type: 'BAR' })\n    .run({ timeout: false });\n});\n\n"},"integration-testing/timeout.html":{"url":"integration-testing/timeout.html","title":"Timeout","keywords":"","body":"Timeout\nBecause expectSaga runs sagas asynchronously, it has a default timeout in case\nyour saga runs too long. This is needed for sagas that have multiple\nasynchronous actions, that have infinite loops, or that use saga helpers like\ntakeEvery. expectSaga will cancel your saga if it times out and print a\nwarning message.\nfunction* mainSaga() {\n  while (true) {\n    const action = yield take('READY');\n    yield put({ type: 'DATA', payload: action.payload });\n  }\n}\n\nit('times out', () => {\n  return expectSaga(mainSaga)\n    .put({ type: 'DATA', payload: 42 })\n    .dispatch({ type: 'READY', payload: 42 })\n\n    // saga never terminates on its own\n    // implicit timeout of 250ms will cancel saga\n    // and print warning message to console\n    .run();\n});\n\nSilencing Warnings\nThe warning message is typically useful if a saga without an infinite loop is\ntaking too long. If you have a saga with an infinite loop, though, you will want\nit to time out. Therefore, to silence the warning message, you can pass into the\nrun method an object with the silenceTimeout property set to true.\nit('can be silenced', () => {\n  return expectSaga(mainSaga)\n    .put({ type: 'DATA', payload: 42 })\n    .dispatch({ type: 'READY', payload: 42 })\n\n    // no warning message will be printed\n    // this is useful if you expect the saga to time out\n    .run({ silenceTimeout: true });\n});\n\nAdjusting Timeout\nInstead of silencing warnings, you can adjust the timeout length. The default\ntimeout length is 250 milliseconds. You can change the default timeout by\nsetting the DEFAULT_TIMEOUT property of expectSaga in milliseconds.\nexpectSaga.DEFAULT_TIMEOUT = 500; // set it to 500ms\n\nIf you want to override the timeout for a particular test case, then you can\npass in a timeout length to the run method.\nconst delay = time => new Promise(resolve => setTimeout(resolve, time));\n\nfunction* mainSaga() {\n  yield call(delay, 300);\n  yield put({ type: 'HELLO' });\n}\n\nit('can have a different timeout length', () => {\n  return expectSaga(mainSaga)\n    .put({ type: 'HELLO' })\n\n    // saga will take at least 300ms,\n    // so time out after 500ms to be safe\n    .run(500);\n});\n\nAlternatively, you can opt out of the timeout behavior and force expectSaga to\nwait until your saga is done on its own by passing in false to the run\nmethod. WARNING: this won't work with sagas with infinite loops because the\nsaga will never finish on its own.\nit('never times out', () => {\n  return expectSaga(mainSaga)\n    .put({ type: 'HELLO' })\n\n    // wait until the saga finishes on its own\n    .run(false);\n});\n\n"},"integration-testing/state.html":{"url":"integration-testing/state.html","title":"State","keywords":"","body":"State\nIf your saga uses the select effect, then you'll need some state to select\nagainst. The expectSaga API includes the withState and withReducer methods\nto manage store state in your tests.\nFor static state, you can just use the withState method as seen below:\nconst storeState = {\n  data: {\n    foo: 'bar',\n  },\n};\n\nfunction getData(state) {\n  return state.data;\n}\n\nfunction* saga() {\n  const data = yield select(getData);\n  yield put({ type: 'DATA', payload: data });\n}\n\nit('can take store state', () => {\n  return expectSaga(saga)\n    .withState(storeState)\n    .put({ type: 'DATA', payload: storeState.data })\n    .run();\n});\n\nFor state that might change, you can use the withReducer method. It takes two\narguments: your reducer and optional initial state. If you don't supply the\ninitial state, then withReducer will extract it by passing an initial action\ninto your reducer like Redux.\nconst HAVE_BIRTHDAY = 'HAVE_BIRTHDAY';\nconst AGE_BEFORE = 'AGE_BEFORE';\nconst AGE_AFTER = 'AGE_AFTER';\n\nconst initialDog = {\n  name: 'Tucker',\n  age: 11,\n};\n\nfunction dogReducer(state = initialDog, action) {\n  if (action.type === HAVE_BIRTHDAY) {\n    return {\n      ...state,\n      age: state.age + 1,\n    };\n  }\n\n  return state;\n}\n\nfunction getAge(state) {\n  return state.age;\n}\n\nfunction* saga() {\n  const ageBefore = yield select(getAge);\n\n  yield put({ type: AGE_BEFORE, payload: ageBefore });\n\n  yield take(HAVE_BIRTHDAY);\n\n  const ageAfter = yield select(getAge);\n\n  yield put({ type: AGE_AFTER, payload: ageAfter });\n}\n\nit('handles reducers when not supplying initial state', () => {\n  return expectSaga(saga)\n    .withReducer(dogReducer)\n\n    .put({ type: AGE_BEFORE, payload: 11 })\n    .put({ type: AGE_AFTER, payload: 12 })\n\n    .dispatch({ type: HAVE_BIRTHDAY })\n    .run();\n});\n\nit('handles reducers when supplying initial state', () => {\n  return expectSaga(saga)\n    .withReducer(dogReducer, initialDog)\n\n    .put({ type: AGE_BEFORE, payload: 11 })\n    .put({ type: AGE_AFTER, payload: 12 })\n\n    .dispatch({ type: HAVE_BIRTHDAY })\n    .run();\n});\n\n"},"integration-testing/mocking/":{"url":"integration-testing/mocking/","title":"Mocking","keywords":"","body":"Mocking with Providers\nSometimes integration testing sagas can be laborious, especially when you have\nto mock server APIs for call or create fake state and selectors to use with\nselect.\nTo make tests simpler, Redux Saga Test Plan allows you to intercept and handle\neffect creators instead of letting Redux Saga handle them. This is similar to a\nmiddleware layer that Redux Saga Test Plan calls providers.\nTo use providers, you can call the provide method. The provide method takes\none argument which can either be an array or an object literal.\n"},"integration-testing/mocking/static-providers.html":{"url":"integration-testing/mocking/static-providers.html","title":"Static Providers","keywords":"","body":"Static Providers\nYou can provide mock values in a terse manner via static providers. Pass in\nan array of tuple pairs (array pairs) into the provide method. For each pair,\nthe first element should be a matcher for matching the effect and the second\neffect should be the mock value you want to provide. You can use effect creators\nfrom redux-saga/effects as matchers or import matchers from\nredux-saga-test-plan/matchers. The benefit of using Redux Saga Test Plan's\nmatchers is that they also offer partial matching. For example, you can use\ncall.fn to match any calls to a function without regard to its arguments.\nimport { call, put, select } from 'redux-saga/effects';\nimport { expectSaga } from 'redux-saga-test-plan';\nimport * as matchers from 'redux-saga-test-plan/matchers';\nimport api from 'my-api';\nimport * as selectors from 'my-selectors';\n\nfunction* saga() {\n  const id = yield select(selectors.getId);\n  const user = yield call(api.fetchUser, id);\n\n  yield put({ type: 'RECEIVE_USER', payload: user });\n}\n\nit('provides a value for the API call', () => {\n  return expectSaga(saga)\n    .provide([\n      // Use the `select` effect creator from Redux Saga to match\n      [select(selectors.getId), 42],\n\n      // Use the `call.fn` matcher from Redux Saga Test Plan\n      [matchers.call.fn(api.fetchUser), { id: 42, name: 'John Doe' }],\n    ])\n    .put({\n      type: 'RECEIVE_USER',\n      payload: { id: 42, name: 'John Doe' },\n    })\n    .run();\n});\n\nMatchers\nInside the redux-saga-test-plan/matchers module, there are matchers for most\nof the effect creators available in Redux Saga. You can reference effect\ncreators in Redux Saga's docs\nhere.\n\nactionChannel(pattern, [buffer])\napply(context, fn, args)\ncall([context, fn], ...args)\ncall(fn, ...args)\ncancel(task)\ncancelled()\ncps([context, fn], ...args)\ncps(fn, ...args)\nflush(channel)\nfork([context, fn], ...args)\nfork(fn, ...args)\njoin(task)\nput(action)\nput.resolve(action)\nrace(effects)\nselect(selector, ...args)\nspawn([context, fn], ...args)\nspawn(fn, ...args)\ntake(pattern)\ntake.maybe(pattern)\n\nPartial Matchers\nSometimes you're not interested in matching a call effect with exact arguments\nor a put effect with a particular action payload.\nInstead you only want to match a call to a particular function or match a\nput with a particular action type. You can handle these situations with\npartial matchers.\nThe following assertions have a like method along with convenient helper\nmethods for partially matching assertions:\n\nactionChannel\napply\ncall\ncps\nfork\nput\nput.resolve\nselect\nspawn\n\nNOTE: the like method requires knowledge of the properties on effects such\nas the fn property of call and the action property of put. Essentially,\nlike allows you to match effects with certain properties without worrying\nabout the other properties. Therefore, you can match a call by fn without\nworrying about the args property.\nIn addition to like, there are other some common helper methods like fn and\nactionType available, appropriate to the kind of effect:\n\n\n\nMethod\nDescription\n\n\n\n\nactionChannel.pattern\nMatch actionChannel by pattern. Useful if you use custom buffers with actionChannel.\n\n\napply.fn\nMatch apply by fn.\n\n\ncall.fn\nMatch call by fn.\n\n\ncps.fn\nMatch cps by fn.\n\n\nfork.fn\nMatch fork by fn.\n\n\nput.actionType\nMatch put by action.type.\n\n\nput.resolve.actionType\nMatch put.resolve by action.type.\n\n\nselect.selector\nMatch select by selector function.\n\n\nspawn.fn\nMatch spawn by fn.\n\n\n\nOrdering\nProviders are checked from left to right (or top to down depending on how you\nlook at it). The first provider to match an effect is used, skipping subsequent\nproviders. If no providers match, then the effect is handled by Redux Saga as\nnormal.\nimport { call, put, select } from 'redux-saga/effects';\nimport * as matchers from 'redux-saga-test-plan/matchers';\nimport api from 'my-api';\nimport * as selectors from 'my-selectors';\n\nfunction* saga() {\n  const user = yield call(api.findUser, 1);\n  const dog = yield call(api.findDog);\n  const greeting = yield call(api.findGreeting);\n  const otherData = yield select(selectors.getOtherData);\n\n  yield put({\n    type: 'DONE',\n    payload: { user, dog, greeting, otherData },\n  });\n}\n\nconst fakeUser = { name: 'John Doe' };\nconst fakeDog = { name: 'Tucker' };\nconst fakeOtherData = { foo: 'bar' };\n\nit('takes multiple providers and composes them', () => {\n  return expectSaga(saga)\n    .provide([\n      [matchers.call.fn(api.findUser), fakeUser],\n      [matchers.call.fn(api.findDog), fakeDog],\n      [select(selectors.getOtherData), fakeOtherData],\n    ])\n    .put({\n      type: 'DONE',\n      payload: {\n        user: fakeUser,\n        dog: fakeDog,\n        greeting: 'hello',\n        otherData: fakeOtherData,\n      },\n    })\n    .run();\n});\n\nThrow Errors\nYou can simulate errors with static providers via the throwError function from\nthe redux-saga-test-plan/providers module. When providing an error, wrap it\nwith a call to throwError to let Redux Saga Test Plan know that you want to\nsimulate a thrown error.\nimport { call, put } from 'redux-saga/effects';\nimport * as matchers from 'redux-saga-test-plan/matchers';\nimport { throwError } from 'redux-saga-test-plan/providers';\nimport api from 'my-api';\n\nfunction* userSaga(id) {\n  try {\n    const user = yield call(api.fetchUser, id);\n    yield put({ type: 'RECEIVE_USER', payload: user });\n  } catch (e) {\n    yield put({ type: 'FAIL_USER', error: e });\n  }\n}\n\nit('handles errors', () => {\n  const error = new Error('error');\n\n  return expectSaga(userSaga)\n    .provide([\n      [matchers.call.fn(api.fetchUser), throwError(error)],\n    ])\n    .put({ type: 'FAIL_USER', error })\n    .run();\n});\n\nStatic Providers with Dynamic Values\nStatic providers can provide dynamic values too. Instead of supplying a static\nvalue, you can supply a function that produces the value. This function takes as\narguments the matched effect as well as a next function. Additionally, you\nmust wrap the function with a call to the dynamic function from the\nredux-saga-test-plan/providers module. Inside the provider function, you can\ninspect the effect further and return a mock value or return a call to the\nnext function. Returning a call to the next function will tell Redux Saga\nTest Plan to try the next provider, similar to a middleware stack. If there are\nno more providers, then Redux Saga Test Plan will let Redux Saga handle the\neffect.\nimport { call, put } from 'redux-saga/effects';\nimport * as matchers from 'redux-saga-test-plan/matchers';\nimport { dynamic } from 'redux-saga-test-plan/providers';\n\nconst add2 = a => a + 2;\n\nfunction* someSaga() {\n  const x = yield call(add2, 4);\n  const y = yield call(add2, 6);\n  const z = yield call(add2, 8);\n\n  yield put({ type: 'DONE', payload: x + y + z });\n}\n\nconst provideDoubleIf6 = ({ args: [a] }, next) => (\n  // Check if the first argument is 6\n  a === 6 ? a * 2 : next()\n);\n\nconst provideTripleIfGt4 = ({ args: [a] }, next) => (\n  // Check if the first argument is greater than 4\n  a > 4 ? a * 3 : next()\n);\n\nit('works with dynamic static providers', () => {\n  return expectSaga(someSaga)\n    .provide([\n      [matchers.call.fn(add2), dynamic(provideDoubleIf6)],\n      [matchers.call.fn(add2), dynamic(provideTripleIfGt4)],\n    ])\n    .put({ type: 'DONE', payload: 42 })\n    .run();\n});\n\nOther Examples\nParallel Effects via all\nProviders work on effects yielded inside an all effect:\nimport { put, select } from 'redux-saga/effects';\nimport { expectSaga } from 'redux-saga-test-plan';\nimport { selectors } from 'my-selectors';\n\nfunction* saga() {\n  const [name, age] = yield all([\n    select(selectors.getName),\n    select(selectors.getAge),\n  ]);\n\n  yield put({ type: 'USER', payload: { name, age } });\n}\n\nit('provides values for effects inside arrays', () => {\n  return expectSaga(saga)\n    .provide([\n      [select(selectors.getName), 'Tucker'],\n      [select(selectors.getAge), 11],\n    ])\n    .put({\n      type: 'USER',\n      payload: { name: 'Tucker', age: 11 },\n    })\n    .run();\n});\n\nParallel Effects via an Array\nProviders work on effects yielded inside an array too. NOTE: yielding an\narray is deprecated in Redux Saga, so this functionality will be removed when\nRedux Saga removes support for yielded arrays.\nimport { put, select } from 'redux-saga/effects';\nimport { expectSaga } from 'redux-saga-test-plan';\nimport { selectors } from 'my-selectors';\n\nfunction* saga() {\n  const [name, age] = yield [\n    select(selectors.getName),\n    select(selectors.getAge),\n  ];\n\n  yield put({ type: 'USER', payload: { name, age } });\n}\n\nit('provides values for effects inside arrays', () => {\n  return expectSaga(saga)\n    .provide([\n      [select(selectors.getName), 'Tucker'],\n      [select(selectors.getAge), 11],\n    ])\n    .put({\n      type: 'USER',\n      payload: { name: 'Tucker', age: 11 },\n    })\n    .run();\n});\n\nProviding in Forked/Spawned Sagas\nProviders work for effects in forked/spawned sagas too.\nimport { call, fork, put } from 'redux-saga/effects';\nimport { expectSaga } from 'redux-saga-test-plan';\nimport * as matchers from 'redux-saga-test-plan/matchers';\nimport api from 'my-api';\n\nfunction* fetchUserSaga() {\n  const user = yield call(api.fetchUser);\n  yield put({ type: 'RECEIVE_USER', payload: user });\n}\n\nfunction* forkingSaga() {\n  yield fork(fetchUserSaga);\n}\n\nfunction* spawningSaga() {\n  yield spawn(fetchUserSaga);\n}\n\nit('provides values in forked sagas', () => {\n  return expectSaga(forkingSaga)\n    .provide([\n      [matchers.call.fn(api.fetchUser), fakeUser],\n    ])\n    .put({ type: 'RECEIVE_USER', payload: fakeUser })\n    .run();\n});\n\nit('provides values in spawned sagas', () => {\n  return expectSaga(spawningSaga)\n    .provide([\n      [matchers.call.fn(api.fetchUser), fakeUser],\n    ])\n    .put({ type: 'RECEIVE_USER', payload: fakeUser })\n    .run();\n});\n\nMore Examples\nFor some more contrived examples of providers, look in the\nrepo tests.\nCaveats\nFor providers to work, expectSaga will necessarily wrap forked/spawned sagas\nwith an intermediary generator called sagaWrapper in order to intercept\neffects. To ensure that your saga receives back a task object with a correct\nname property, Redux Saga Test Plan will attempt to rename the sagaWrapper\nfunction to the name of a forked saga. This works in almost all JavaScript\nenvironments but will fail in PhantomJS. Therefore, you can't depend on the\ntask name property being correct in PhantomJS.\n"},"integration-testing/mocking/dynamic-providers.html":{"url":"integration-testing/mocking/dynamic-providers.html","title":"Dynamic Providers","keywords":"","body":"Dynamic Providers\nYou can use completely dynamic providers by passing in an object literal to the\nprovide method. The object literal argument must contain effect creator names\nas keys and function handlers as values. Each function handler takes two\narguments, the yielded effect and a next callback. You can inspect the effect\nand return a fake value based on the properties in the effect. If you don't want\nto handle the effect yourself, you can pass it on to Redux Saga by invoking the\nnext callback parameter.\nHere is an example with Jest to show you how to supply a fake value for an API\ncall:\nimport { call, put, take } from 'redux-saga/effects';\nimport { expectSaga } from 'redux-saga-test-plan';\nimport api from 'my-api';\n\nfunction* saga() {\n  const action = yield take('REQUEST_USER');\n  const id = action.payload;\n\n  const user = yield call(api.fetchUser, id);\n\n  yield put({ type: 'RECEIVE_USER', payload: user });\n}\n\nit('provides a value for the API call', () => {\n  return expectSaga(saga)\n    .provide({\n      call(effect, next) {\n        // Check for the API call to return fake value\n        if (effect.fn === api.fetchUser) {\n          const id = effect.args[0];\n          return { id, name: 'John Doe' };\n        }\n\n        // Allow Redux Saga to handle other `call` effects\n        return next();\n      },\n    })\n    .put({\n      type: 'RECEIVE_USER',\n      payload: { id: 1, name: 'John Doe' },\n    })\n    .dispatch({ type: 'REQUEST_USER', payload: 1 })\n    .run();\n});\n\nEffect Creators\nEven though you'll probably never need them all, you can supply a provider for\nalmost every effect creator*:\n\nall **\nactionChannel\ncall\ncancel\ncancelled\ncps\nflush\nfork\njoin\nput\nrace\nselect\nspawn\ntake\n\n*Because there is no way to distinguish the apply and call effects, you\nmust handle apply effects with the call provider function.\n*To handle take.maybe and put.resolve, use the take and put providers,\nrespectively. You can inspect take effects for the maybe property and put\neffects for the resolve property.\n** all will provide values for a yielded all effect as well as a yielded\narray. NOTE: yielding an array is deprecated in Redux Saga, so this\nfunctionality will be removed when Redux Saga removes support for yielded\narrays.\nOther Examples\nSelect\nimport { put, select } from 'redux-saga/effects';\nimport { expectSaga } from 'redux-saga-test-plan';\nimport { selectors } from 'my-selectors';\n\nfunction* saga() {\n  const name = yield select(selectors.getName);\n  const age = yield select(selectors.getAge);\n\n  yield put({ type: 'USER', payload: { name, age } });\n}\n\nit('provides a value for the selector', () => {\n  return expectSaga(saga)\n    .provide({\n      select({ selector }, next) {\n        if (selector === selectors.getName) {\n          return 'Tucker';\n        }\n\n        if (selector === selectors.getAge) {\n          return 11;\n        }\n\n        return next();\n      },\n    })\n    .put({\n      type: 'USER',\n      payload: { name: 'Tucker', age: 11 },\n    })\n    .run();\n});\n\nParallel Effects via all\nProviders work on effects yielded inside an all effect.\nimport { all, put, select } from 'redux-saga/effects';\nimport { expectSaga } from 'redux-saga-test-plan';\nimport { selectors } from 'my-selectors';\n\nfunction* saga() {\n  const [name, age] = yield all([\n    select(selectors.getName),\n    select(selectors.getAge),\n  ]);\n\n  yield put({ type: 'USER', payload: { name, age } });\n}\n\nit('provides values for effects inside arrays', () => {\n  return expectSaga(saga)\n    .provide({\n      select({ selector }, next) {\n        if (selector === selectors.getName) {\n          return 'Tucker';\n        }\n\n        if (selector === selectors.getAge) {\n          return 11;\n        }\n\n        return next();\n      },\n    })\n    .put({\n      type: 'USER',\n      payload: { name: 'Tucker', age: 11 },\n    })\n    .run();\n});\n\nOr you can provide a value for the entire array of effects via the all\nprovider:\nimport { put, select } from 'redux-saga/effects';\nimport { expectSaga } from 'redux-saga-test-plan';\nimport { selectors } from 'my-selectors';\n\nfunction* saga() {\n  const [name, age] = yield [\n    select(selectors.getName),\n    select(selectors.getAge),\n  ];\n\n  yield put({ type: 'USER', payload: { name, age } });\n}\n\nit('provides a value for the entire array', () => {\n  return expectSaga(saga)\n    .provide({\n      all: () => ['Tucker', 11],\n    })\n    .put({\n      type: 'USER',\n      payload: { name: 'Tucker', age: 11 },\n    })\n    .run();\n});\n\nParallel Effects via an Array\nProviders work on effects yielded inside an array. NOTE: yielding an array\nis deprecated in Redux Saga, so this functionality will be removed when Redux\nSaga removes support for yielded arrays.\nimport { put, select } from 'redux-saga/effects';\nimport { expectSaga } from 'redux-saga-test-plan';\nimport { selectors } from 'my-selectors';\n\nfunction* saga() {\n  const [name, age] = yield [\n    select(selectors.getName),\n    select(selectors.getAge),\n  ];\n\n  yield put({ type: 'USER', payload: { name, age } });\n}\n\nit('provides values for effects inside arrays', () => {\n  return expectSaga(saga)\n    .provide({\n      select({ selector }, next) {\n        if (selector === selectors.getName) {\n          return 'Tucker';\n        }\n\n        if (selector === selectors.getAge) {\n          return 11;\n        }\n\n        return next();\n      },\n    })\n    .put({\n      type: 'USER',\n      payload: { name: 'Tucker', age: 11 },\n    })\n    .run();\n});\n\nOr you can provide a value for the entire array of effects via the all\nprovider:\nimport { put, select } from 'redux-saga/effects';\nimport { expectSaga } from 'redux-saga-test-plan';\nimport { selectors } from 'my-selectors';\n\nfunction* saga() {\n  const [name, age] = yield [\n    select(selectors.getName),\n    select(selectors.getAge),\n  ];\n\n  yield put({ type: 'USER', payload: { name, age } });\n}\n\nit('provides a value for the entire array', () => {\n  return expectSaga(saga)\n    .provide({\n      all: () => ['Tucker', 11],\n    })\n    .put({\n      type: 'USER',\n      payload: { name: 'Tucker', age: 11 },\n    })\n    .run();\n});\n\nRace\nimport { call, put, race, take } from 'redux-saga/effects';\nimport { expectSaga } from 'redux-saga-test-plan';\nimport api from 'my-api';\n\nconst delay = time => (\n  new Promise(resolve => setTimeout(resolve, time))\n);\n\nfunction* saga() {\n  const action = yield take('REQUEST_USER');\n  const id = action.payload;\n\n  const { user } = yield race({\n    user: call(api.fetchUser, id),\n    timeout: call(delay, 500),\n  });\n\n  if (user) {\n    yield put({ type: 'RECEIVE_USER', payload: user });\n  } else {\n    yield put({ type: 'TIMEOUT' });\n  }\n}\n\ntest('fetching the user succeeds', () => {\n  const fakeUser = { id: 1, name: 'John Doe' };\n\n  return expectSaga(saga)\n    .provide({\n      race: () => ({ user: fakeUser }),\n    })\n    .put({ type: 'RECEIVE_USER', payload: fakeUser })\n    .dispatch({ type: 'REQUEST_USER' })\n    .run();\n});\n\ntest('timeout wins', () => {\n  return expectSaga(saga)\n    .provide({\n      race: () => ({ timeout: undefined }),\n    })\n    .put({ type: 'TIMEOUT' })\n    .dispatch({ type: 'REQUEST_USER' })\n    .run();\n});\n\nErrors\nYou can simulate errors by throwing from a provider:\nfunction* saga() {\n  const action = yield take('REQUEST_USER');\n  const id = action.payload;\n\n  try {\n    const user = yield call(api.fetchUser, id);\n\n    yield put({ type: 'RECEIVE_USER', payload: user });\n  } catch (e) {\n    yield put({ type: 'FAIL_USER', error: e });\n  }\n}\n\nit('can throw errors in the saga', () => {\n  const error = new Error('Whoops...');\n\n  return expectSaga(saga)\n    .provide({\n      call(effect, next) {\n        if (effect.fn === api.fetchUser) {\n          throw error;\n        }\n\n        return next();\n      },\n    })\n    .put({ error, type: 'FAIL_USER' })\n    .dispatch({ type: 'REQUEST_USER', payload: 1 })\n    .run();\n});\n\nProviding in Forked/Spawned Sagas\nProviders work for effects in forked/spawned sagas too.\nimport { call, fork, put } from 'redux-saga/effects';\nimport { expectSaga } from 'redux-saga-test-plan';\nimport api from 'my-api';\n\nfunction* fetchUserSaga() {\n  const user = yield call(api.fetchUser);\n  yield put({ type: 'RECEIVE_USER', payload: user });\n}\n\nfunction* forkingSaga() {\n  yield fork(fetchUserSaga);\n}\n\nfunction* spawningSaga() {\n  yield spawn(fetchUserSaga);\n}\n\nit('provides values in forked sagas', () => {\n  return expectSaga(forkingSaga)\n    .provide({\n      call({ fn }, next) {\n        if (fn === api.fetchUser) {\n          return fakeUser;\n        }\n\n        return next();\n      },\n    })\n    .put({ type: 'RECEIVE_USER', payload: fakeUser })\n    .run();\n});\n\nit('provides values in spawned sagas', () => {\n  return expectSaga(spawningSaga)\n    .provide({\n      call({ fn }, next) {\n        if (fn === api.fetchUser) {\n          return fakeUser;\n        }\n\n        return next();\n      },\n    })\n    .put({ type: 'RECEIVE_USER', payload: fakeUser })\n    .run();\n});\n\nMultiple Providers\nYou can supply multiple object providers via a couple methods. The easiest way\nis to pass in an array of object providers to the provide method. Provider\nfunctions will be composed according to the effect type, meaning the provider\nfunctions in the first object will be called before subsequent provider\nfunctions in the array.\nBecause provider functions are composed, they are similar to middleware. The\nnext function argument inside provider functions allows you to delegate to the\nnext provider in the middleware stack. If no more providers are available, then\nnext will delegate to Redux Saga to handle the effect as normal.\nimport { call, put, select } from 'redux-saga/effects';\nimport api from 'my-api';\nimport * as selectors from 'my-selectors';\n\nfunction* saga() {\n  const user = yield call(api.findUser, 1);\n  const dog = yield call(api.findDog);\n  const greeting = yield call(api.findGreeting);\n  const otherData = yield select(selectors.getOtherData);\n\n  yield put({\n    type: 'DONE',\n    payload: { user, dog, greeting, otherData },\n  });\n}\n\nconst fakeUser = { name: 'John Doe' };\nconst fakeDog = { name: 'Tucker' };\nconst fakeOtherData = { foo: 'bar' };\n\nconst provideUser = ({ fn, args: [id] }, next) => (\n  fn === api.findUser ? fakeUser : next()\n);\n\nconst provideDog = ({ fn }, next) => (\n  fn === api.findDog ? fakeDog : next()\n);\n\nconst provideOtherData = ({ selector }, next) => (\n  selector === selectors.getOtherData ? fakeOtherData : next()\n);\n\nit('takes multiple providers and composes them', () => {\n  return expectSaga(saga)\n    .provide([\n      { call: provideUser, select: provideOtherData },\n      { call: provideDog },\n    ])\n    .put({\n      type: 'DONE',\n      payload: {\n        user: fakeUser,\n        dog: fakeDog,\n        greeting: 'hello',\n        otherData: fakeOtherData,\n      },\n    })\n    .run();\n});\n\nAn alternative to supplying multiple provider objects is to only pass one object\ninto provide and use the composeProviders function to compose multiple\nprovider functions for a specific effect. You can import the composeProviders\nfunction from the redux-saga-test-plan/providers module. The provider\nfunctions are composed from left to right.\nimport { composeProviders } from 'redux-saga-test-plan/providers';\n\nit('takes multiple providers and composes them', () => {\n  return expectSaga(saga)\n    .provide({\n      call: composeProviders(\n        provideUser,\n        provideDog\n      ),\n\n      select: provideOtherData,\n    })\n    .put({\n      type: 'DONE',\n      payload: {\n        user: fakeUser,\n        dog: fakeDog,\n        greeting: 'hello',\n        otherData: fakeOtherData,\n      },\n    })\n    .run();\n});\n\nMore Examples\nFor some more contrived examples of providers, look in the\nrepo tests.\nCaveats\nFor providers to work, expectSaga will necessarily wrap forked/spawned sagas\nwith an intermediary generator called sagaWrapper in order to intercept\neffects. To ensure that your saga receives back a task object with a correct\nname property, Redux Saga Test Plan will attempt to rename the sagaWrapper\nfunction to the name of a forked saga. This works in almost all JavaScript\nenvironments but will fail in PhantomJS. Therefore, you can't depend on the\ntask name property being correct in PhantomJS.\n"},"integration-testing/partial-matching.html":{"url":"integration-testing/partial-matching.html","title":"Partial Assertions","keywords":"","body":"Partial Matching Assertions\nSometimes you're not interested in the exact arguments passed to a call effect\ncreator or the payload inside an action from a put effect. Instead you're only\nconcerned with if a particular function was invoked via call or if a\nparticular action type was dispatched via put. You can handle these situations\nwith partial matcher assertions.\nThe following assertions have a like method along with convenient helper\nmethods for partially matching assertions:\n\nactionChannel\napply\ncall\ncps\nfork\nput\nput.resolve\nselect\nspawn\n\nNOTE: the like method requires knowledge of the properties on effects such\nas the fn property of call and the action property of put. Essentially,\nlike allows you to match effects with certain properties without worrying\nabout the other properties. Therefore, you can match a call by fn without\nworrying about the args property.\nExample\nHere is a simple example using like:\nfunction* userSaga(id) {\n  try {\n    const user = yield call(api.fetchUser, id);\n    yield put({ type: 'RECEIVE_USER', payload: user });\n  } catch (e) {\n    yield put({ type: 'FAIL_USER', error: e });\n  }\n}\n\nit('fetches user', () => {\n  return expectSaga(userSaga)\n    .call.like({ fn: api.fetchUser })\n    .run();\n});\n\nit('fails', () => {\n  return expectSaga(userSaga)\n    .provide({\n      call() {\n        throw new Error('Not Found');\n      },\n    })\n    .put.like({ action: { type: 'FAIL_USER' } })\n    .run();\n});\n\nNotice that we can assert that the api.fetchUser function was called without\nspecifying the arguments. We can also assert in a failure scenario that an\naction of type FAIL_USER was dispatched without worrying about the error\nproperty of the action.\nHelper Methods Example\nWe can simplify the previous example with the convenient matcher helper methods\ncall.fn and put.actionType:\nfunction* userSaga(id) {\n  try {\n    const user = yield call(api.fetchUser, id);\n    yield put({ type: 'RECEIVE_USER', payload: user });\n  } catch (e) {\n    yield put({ type: 'FAIL_USER', error: e });\n  }\n}\n\nit('fetches user', () => {\n  return expectSaga(userSaga)\n    .call.fn(api.fetchUser)\n    .run();\n});\n\nit('fails', () => {\n  return expectSaga(userSaga)\n    .provide({\n      call() {\n        throw new Error('Not Found');\n      },\n    })\n    .put.actionType('FAIL_USER')\n    .run();\n});\n\nMultiple Properties\nIf you need it in rare cases, you can match on multiple shallow or deep\nproperties via like:\nfunction* saga(id) {\n  yield put({\n    type: 'FOO',\n    payload: 42,\n    meta: { hello: 'world' },\n  });\n\n  // This will be matched\n  yield put({\n    type: 'FOO',\n    payload: 43,\n    meta: { hello: 'world' },\n  });\n}\n\nit('can match on multiple properties', () => {\n  return expectSaga(saga)\n    .put.like({\n      action: {\n        type: 'FOO',\n        payload: 43,\n      },\n    })\n    .run();\n});\n\nHelper Methods\nThere are other some common helper methods like fn and actionType available,\nappropriate to the kind of effect:\n\n\n\nMethod\nDescription\n\n\n\n\nactionChannel.pattern\nMatch actionChannel by pattern. Useful if you use custom buffers with actionChannel.\n\n\napply.fn\nMatch apply by fn.\n\n\ncall.fn\nMatch call by fn.\n\n\ncps.fn\nMatch cps by fn.\n\n\nfork.fn\nMatch fork by fn.\n\n\nput.actionType\nMatch put by action.type.\n\n\nput.resolve.actionType\nMatch put.resolve by action.type.\n\n\nselect.selector\nMatch select by selector function.\n\n\nspawn.fn\nMatch spawn by fn.\n\n\n\n"},"integration-testing/negated-assertions.html":{"url":"integration-testing/negated-assertions.html","title":"Negated Assertions","keywords":"","body":"Negated Assertions\nYou can negate assertions too. Use the not property before calling an\nassertion. Negated assertions also work with partial matcher assertions!\nfunction* authSaga() {\n  const token = yield select(authToken);\n\n  if (token) {\n    yield call(api.setToken, token);\n  }\n}\n\nit('does not set the token', () => {\n  return expectSaga(authSaga)\n    .withState({})\n    .not.call.fn(api.setToken)\n    .run();\n});\n\n"},"integration-testing/forked-sagas.html":{"url":"integration-testing/forked-sagas.html","title":"Forked Sagas","keywords":"","body":"Forked Sagas\nexpectSaga assertions not only work for your main saga, but also for forked\nsagas. Here is a minimal example where we can assert from a behavior perspective\nthat the saga(s) put the FORKED action regardless of which saga actually\nputs it.\nfunction* otherSaga() {\n  yield put({ type: 'FORKED' });\n}\n\nfunction* saga() {\n  yield fork(otherSaga);\n}\n\nfunction* sagaWithTakeEvery() {\n  yield takeEvery('TAKE_EVERY', otherSaga);\n}\n\nit('forked saga runs', () => {\n  return expectSaga(saga)\n    // This action comes from the forked `otherSaga`!\n    .put({ type: 'FORKED' })\n    .run();\n});\n\nit('takeEvery saga runs', () => {\n  return expectSaga(sagaWithTakeEvery)\n    // This action comes from the forked `otherSaga`!\n    .put({ type: 'FORKED' })\n    .dispatch({ type: 'TAKE_EVERY' })\n    .run();\n});\n\nit('fork assertion passes', () => {\n  return expectSaga(saga)\n    // There are other assertions besides `put`\n    // if you want to use them.\n    .fork(otherSaga)\n    .run();\n});\n\n"},"unit-testing/":{"url":"unit-testing/","title":"Unit Testing","keywords":"","body":"Unit Testing\nFor unit testing, Redux Saga Test Plan exports a testSaga function that\ncreates a mock saga for you to assert effects on. testSaga is agnostic about\nyour testing framework, so it simply throws if the sequence of yielded effects\ndon't match your assertion effects.\nPass in your generator function as the first argument. Pass in additional\narguments which will be the arguments passed on to the generator function.\n// ES2015\nimport { testSaga } from 'redux-saga-test-plan';\n\n// ES5\nvar testSaga = require('redux-saga-test-plan').testSaga;\n\nfunction identity(value) {\n  return value;\n}\n\nfunction* otherSaga() {}\n\nfunction* mainSaga(x, y, z) {\n  try {\n    const action = yield take('HELLO');\n    yield put({ type: 'ADD', payload: x + y });\n    yield call(identity, action);\n    yield fork(otherSaga, z);\n  } catch (e) {\n    yield put({ type: 'ERROR', payload: e });\n  }\n}\n\nconst action = { type: 'TEST' };\n\n// saga mock                    x   y  z\nconst saga = testSaga(mainSaga, 40, 2, 20);\n\nThe saga mock has next and throw iterator methods, so you can advance\nthrough the saga. Pass in arguments to next to simulate response values from\nyields. Similarly pass in arguments to throw to specify the thrown error.\nEach next and throw call returns an API with effect assertions. All Redux\nSaga effects are available such as call, put, take, fork, etc. An\nadditional effect called isDone allows you to assert that the generator as\nreached the end.\nfunction identity(value) {\n  return value;\n}\n\nfunction* otherSaga() {}\n\nfunction* mainSaga(x, y, z) {\n  try {\n    const action = yield take('HELLO');\n    yield put({ type: 'ADD', payload: x + y });\n    yield call(identity, action);\n    yield fork(otherSaga, z);\n  } catch (e) {\n    yield put({ type: 'ERROR', payload: e });\n  }\n}\n\nconst action = { type: 'TEST' };\n\nlet saga = testSaga(mainSaga, 40, 2, 20);\n\n// try path\nsaga.next().take('HELLO');\nsaga.next(action).put({ type: 'ADD', payload: 42 });\nsaga.next().call(identity, action);\nsaga.next().fork(otherSaga);\nsaga.next().isDone();\n\n// Or chain together\nsaga = testSaga(mainSaga, 40, 2, 20);\nsaga\n  .next()\n  .take('HELLO')\n\n  .next(action)\n  .put({ type: 'ADD', payload: 42 })\n\n  .next()\n  .call(identity, action)\n\n  .next()\n  .fork(otherSaga)\n\n  .next()\n  .isDone();\n\n// catch path\nconst error = new Error('My Error');\nsaga = testSaga(mainSaga, 40, 2, 20);\nsaga\n  .next()\n\n  .throw(error)\n  .put({ type: 'ERROR', payload: error })\n\n  .next()\n  .isDone();\n\n"},"unit-testing/error-messages.html":{"url":"unit-testing/error-messages.html","title":"Error Messages","keywords":"","body":"Error Messages\nIf a yielded effect and assertion effect call don't match, then the mock saga\nwill throw an error showing the difference between the two.\nfunction identity(value) {\n  return value;\n}\n\nfunction* otherSaga() {}\n\nfunction* mainSaga(x, y, z) {\n  try {\n    const action = yield take('HELLO');\n    yield put({ type: 'ADD', payload: x + y });\n    yield call(identity, action);\n    yield fork(otherSaga, z);\n  } catch (e) {\n    yield put({ type: 'ERROR', payload: e });\n  }\n}\n\nconst action = { type: 'TEST' };\n\nlet saga = testSaga(mainSaga, 40, 2, 20);\n\nsaga.next().take('HI');\n\n// Throws with below:\n//\n// SagaTestError:\n// Assertion 1 failed: take effects do not match\n// \n// Expected\n// --------\n// { channel: null, pattern: 'HI' }\n// \n// Actual\n// ------\n// { channel: null, pattern: 'HELLO' }\n\nsaga = testSaga(mainSaga, 40, 2, 20);\nsaga\n  .next()\n  .take('HELLO')\n\n  .next(action)\n  .put({ type: 'ADD', payload: 43 });\n\n// Throws with below:\n//\n// SagaTestError:\n// Assertion 2 failed: put effects do not match\n// \n// Expected\n// --------\n// { channel: null, action: { type: 'ADD', payload: 43 } }\n// \n// Actual\n// ------\n// { channel: null, action: { type: 'ADD', payload: 42 } }\n\nIf the yielded effect and asserted effect are different types of effects, then\nthe saga will throw an error with a message showing the difference.\nfunction identity(value) {\n  return value;\n}\n\nfunction* otherSaga() {}\n\nfunction* mainSaga(x, y, z) {\n  try {\n    const action = yield take('HELLO');\n    yield put({ type: 'ADD', payload: x + y });\n    yield call(identity, action);\n    yield fork(otherSaga, z);\n  } catch (e) {\n    yield put({ type: 'ERROR', payload: e });\n  }\n}\n\nconst action = { type: 'TEST' };\n\nconst saga = testSaga(mainSaga, 40, 2, 20);\n\nsaga\n  .next()\n  .take('HELLO')\n\n  .next(action)\n  .take('WORLD');\n\n// SagaTestError:\n// Assertion 2 Failed: expected take effect, but the saga yielded a different effect\n// \n// Expected\n// --------\n// { '@@redux-saga/IO': true,\n//   TAKE: { channel: null, pattern: 'WORLD' } }\n// \n// Actual\n// ------\n// { '@@redux-saga/IO': true,\n//   PUT: { channel: null, action: { type: 'ADD', payload: 42 } } }\n\n"},"unit-testing/effect-creators.html":{"url":"unit-testing/effect-creators.html","title":"Effect Creators","keywords":"","body":"Effect Creator Assertions\nThe testSaga API has assertions for all the effect creators available in Redux\nSaga. You can reference them in Redux Saga's docs\nhere.\n\ntake(pattern)\ntake.maybe(pattern)\ntake(channel)\ntake.maybe(channel)\nput(action)\nput.resolve(action)\nput(channel, action)\ncall(fn, ...args)\ncall([context, fn], ...args)\napply(context, fn, args)\ncps(fn, ...args)\ncps([context, fn], ...args)\nfork(fn, ...args)\nfork([context, fn], ...args)\nspawn(fn, ...args)\nspawn([context, fn], ...args)\njoin(task)\ncancel(task)\nselect(selector, ...args)\nactionChannel(pattern, [buffer])\nflush(channel)\ncancelled()\nall([...effects])\nrace(effects)\ntakem(pattern) DEPRECATED: Use take.maybe\ntakem(channel) DEPRECATED: Use take.maybe\n\n"},"unit-testing/saga-helpers.html":{"url":"unit-testing/saga-helpers.html","title":"Saga Helpers","keywords":"","body":"Saga Helpers\nRedux Saga Test Plan also offers assertions for the saga helper effects\ntakeEvery, takeLatest, and throttle. These helpers come in two flavors.\nYour sagas can delegate (i.e. use yield*) to these helpers if you import them\ndirectly from the redux-saga module. This is now a deprecated pattern\naccording to Redux Saga. You are encouraged to now import the equivalent effect\ncreators for these helpers from the redux-saga/effects module and just yield\nthem like other effect creators. Redux Saga still supports delegating to the\nhelpers, but if it removes support for delegation, then Redux Saga Test Plan\nwill also necessarily remove support for testing delegations.\nTo decide which assertions you need for testing your saga, please review the\npossibilities below:\n\nIf you are using the helper effect creators from redux-saga/effects, you\ncan use the respective methods takeEveryEffect, takeLatestEffect, and\nthrottleEffect from Redux Saga Test Plan.\n\nIf your saga delegates to any of these helpers from redux-saga directly,\nthen you can use the respective takeEvery, takeLatest, and throttle\nmethods from Redux Saga Test Plan. The difference between these assertions\nand the normal effect creator assertions is that you shouldn't call next on\nyour test saga beforehand. These methods will automatically advance the saga\nfor you.\nDEPRECATION NOTICE:Delegating is now a deprecated pattern for Redux Saga. Please move to using\nthe effect creators added in Redux Saga\nv0.14.0.\nIf Redux Saga removes this pattern, then Redux Saga Test Plan will also\nremove the respective assertion methods.\n\nStarting in Redux Saga\nv0.12.0,\ninstead of delegating to the helpers from the redux-saga module, you could\ninstead yield them like normal effect creators such as call or put. These\nare non-blocking yields; internally, Redux Saga will fork them like the\nnormal fork effect creator. If you yield instead of delegating, then you\ncan use the respective takeEveryFork, takeLatestFork, and throttleFork\nmethods from Redux Saga Test Plan. Because these assertions are like the\nnormal effect creator assertions, you WILL need to call next prior to\nthese assertions.\nDEPRECATION NOTICE:Because these are the same helpers you can delegate to, this pattern may also\nbe removed by Redux Saga, meaning Redux Saga Test Plan will also remove the\nrespective assertion methods.\n\n\nSummary\n\n\n\nHelper\nEffect Creator\nDelegating HelperDEPRECATED\nYielding HelperDEPRECATED\n\n\n\n\ntakeEvery\nUse takeEveryEffect assertion.Call next before.\nUse takeEvery assertion.Don't call next before.\nUse takeEveryFork assertion.Call next before.\n\n\ntakeLatest\nUse takeLatestEveryEffect assertion.Call next before.\nUse takeLatest assertion.Don't call next before.\nUse takeLatestFork assertion.Call next before.\n\n\nthrottle\nUse throttleEffect assertion.Call next before.\nUse throttle assertion.Don't call next before.\nUse throttleFork assertion.Call next before.\n\n\n\nDelegating Example\nimport { takeEvery } from 'redux-saga';\nimport { call } from 'redux-saga/effects';\nimport testSaga from 'redux-saga-test-plan';\n\nfunction identity(value) {\n  return value;\n}\n\nfunction* otherSaga(action, value) {\n  yield call(identity, value);\n}\n\nfunction* anotherSaga(action) {\n  yield call(identity, action.payload);\n}\n\nfunction* mainSaga() {\n  yield call(identity, 'foo');\n  yield* takeEvery('READY', otherSaga, 42);\n}\n\n// All good\ntestSaga(mainSaga)\n  .next()\n  .call(identity, 'foo')\n  .takeEvery('READY', otherSaga, 42)\n  .finish()\n  .isDone();\n\n// Will throw\ntestSaga(mainSaga)\n  .next()\n  .call(identity, 'foo')\n  .takeEvery('READY', anotherSaga, 42)\n  .finish()\n  .isDone();\n\n// SagaTestError:\n// Assertion 2 failed: expected takeEvery to fork anotherSaga\n//\n// Expected\n// --------\n// [Function: anotherSaga]\n//\n// Actual\n// ------\n// [Function: otherSaga]\n\nYielding Example\nimport { takeEvery } from 'redux-saga';\nimport { call } from 'redux-saga/effects';\nimport testSaga from 'redux-saga-test-plan';\n\nfunction identity(value) {\n  return value;\n}\n\nfunction* otherSaga(action, value) {\n  yield call(identity, value);\n}\n\nfunction* anotherSaga(action) {\n  yield call(identity, action.payload);\n}\n\nfunction* mainSaga() {\n  yield call(identity, 'foo');\n  yield takeEvery('READY', otherSaga, 42);\n}\n\n// All good\ntestSaga(mainSaga)\n  .next()\n  .call(identity, 'foo')\n\n  .next()\n  .takeEveryFork('READY', otherSaga, 42)\n\n  .finish()\n  .isDone();\n\n// Will throw\ntestSaga(mainSaga)\n  .next()\n  .call(identity, 'foo')\n\n  .next()\n  .takeEveryFork('READY', anotherSaga, 42)\n\n  .finish()\n  .isDone();\n\n// SagaTestError:\n// Assertion 2 failed: expected takeEvery to fork anotherSaga\n//\n// Expected\n// --------\n// [Function: anotherSaga]\n//\n// Actual\n// ------\n// [Function: otherSaga]\n\n"},"unit-testing/general-assertions.html":{"url":"unit-testing/general-assertions.html","title":"General Assertions","keywords":"","body":"General Assertions\nOther general assertions and helpers available are is, isDone, returns,\nand inspect.\n\n\n\nAssertion\nDescription\n\n\n\n\nis\nGeneral purpose deep equal assertion\n\n\nisDone\nAssert at end of saga\n\n\nreturns\nAssert saga returns a value and is done\n\n\ninspect\nInspect the next yielded value for more fine-grained, custom testing\n\n\n\nGeneric Example\nimport { take } from 'redux-saga/effects';\n\nfunction* mainSaga() {\n  yield 42;\n  yield { foo: { bar: 'baz' } };\n}\n\nlet saga = testSaga(mainSaga);\n\nsaga\n  .next()\n  .is(42)\n\n  .next()\n  .is({ foo: { bar: 'baz' } })\n\n  .next()\n  .isDone();\n\nreturns Example\nfunction* otherSaga(x) {\n  return x * 2;\n}\n\nconst saga = testSaga(otherSaga, 21);\n\nsaga\n  .next()\n  .returns(42);\n\ninspect Example\nIf your saga yields a nondeterministic type of value or something not easily\ncovered by the effect assertions or other general assertions, then you can use\ninspect to retrieve the actual yielded value and perform your own assertions\nwith your favorite assertion library.\nfunction* saga() {\n  yield () => 42;\n}\n\ntestSaga(saga)\n  .next()\n  .inspect((fn) => {\n    expect(fn()).toBe(42);\n  });\n\n"},"unit-testing/time-travel.html":{"url":"unit-testing/time-travel.html","title":"Time Travel","keywords":"","body":"Time Travel\nThe mock saga can also time travel through the saga generator.\n\n\n\nMethod\nDescription\n\n\n\n\nback(n?: number)\nBack up a number of steps in the saga (defaults to 1)\n\n\nrestart(...args: Array)\nRestart the saga from the beginning\n\n\nfinish(arg?: any)\nFinish a saga early by forcing a return\n\n\nsave(label: string)\nSave a point in history with a label\n\n\nrestore(label: string)\nRestore a point in history (label must be saved prior)\n\n\n\nGo Back or Restart\nFor simple time travel, the mock saga includes back and restart methods\nwhich allow you to back up some number of steps or completely restart the saga.\nThis is useful for handling multiple control flow branches such as if/else and\ntry/catch.\nback takes an optional number argument to specify the number of steps to back\nup. It defaults to 1.\nAs its name suggestions, restart will restart your saga. If your saga takes\narguments, then you can restart with new arguments by passing them in to\nrestart. If you don't supply any arguments, then it will restart with whatever\noriginal arguments you used.\nfunction getPredicate() {}\n\nfunction* mainSaga(x) {\n  try {\n    const predicate = yield select(getPredicate);\n\n    if (predicate) {\n      yield take('TRUE');\n    } else {\n      yield take('FALSE');\n    }\n\n    yield put({ type: 'DONE', payload: x });\n  } catch (e) {\n    yield take('ERROR');\n  }\n}\n\nlet saga = testSaga(mainSaga, 42);\n\n// Back up one step by default\nsaga\n  .next()\n  .select(getPredicate)\n\n  .back()\n  .next()\n  .select(getPredicate);\n\n// Back up `2` steps to try `else` branch\nsaga = testSaga(mainSaga, 42);\nsaga\n  .next()\n  .select(getPredicate)\n\n  .next(true)\n  .take('TRUE')\n\n  .next()\n  .isDone()\n\n  .back(2)\n  .next(false)\n  .take('FALSE')\n\n  .next()\n  .put({ type: 'DONE', payload: 42 })\n\n  .next()\n  .isDone();\n\n// Restart from the beginning to throw\nconst error = new Error('My Error');\nsaga = testSaga(mainSaga, 42);\n\nsaga\n  .next()\n  .select(getPredicate)\n\n  .next(true)\n  .take('TRUE')\n\n  .next()\n  .put({ type: 'DONE', payload: 42 })\n\n  .next()\n  .isDone()\n\n  .restart()\n  .next()\n  .throw(error)\n  .take('ERROR')\n\n  .next()\n  .isDone();\n\n// Restart to update the argument\nsaga = testSaga(mainSaga, 42);\n\nsaga\n  .next()\n  .select(getPredicate)\n\n  .next(true)\n  .take('TRUE')\n\n  .next()\n  .put({ type: 'DONE', payload: 42 })\n\n  .next()\n  .isDone()\n\n  .restart('hello world')\n  .next()\n  .select(getPredicate)\n\n  .next(true)\n  .take('TRUE')\n\n  .next()\n  .put({ type: 'DONE', payload: 'hello world' })\n\n  .next()\n  .isDone();\n\nFinish Early\nIf you want to finish a saga early like bailing out of a while loop, then you\ncan use the finish method.\nfunction identity(value) {\n  return value;\n}\n\nfunction* loopingSaga() {\n  while (true) {\n    const action = yield take('HELLO');\n    yield call(identity, action);\n  }\n}\n\nlet saga = testSaga(loopingSaga);\n\nsaga\n  .next()\n\n  .take('HELLO')\n  .next(action)\n  .call(identity, action)\n  .next()\n\n  .take('HELLO')\n  .next(action)\n  .call(identity, action)\n  .next()\n\n  .finish()\n  .next()\n  .isDone();\n\n// With argument(s)\n\nsaga = testSaga(loopingSaga);\n\nsaga\n  .next()\n\n  .take('HELLO')\n  .next(action)\n  .call(identity, action)\n  .next()\n\n  .take('HELLO')\n  .next(action)\n  .call(identity, action)\n  .next()\n\n  .finish(42)\n  .returns(42);\n\nSave and Restore History\nFor more robust time travel, you can use the save and restore methods. The\nsave method allows you to label a point in the saga that you can return to by\ncalling restore with the same label. This can be more useful and less brittle\nthan using the simple back method.\nfunction getPredicate() {}\nfunction getFinalPayload() {}\n\nexport default function* mainSaga() {\n  try {\n    yield take('READY');\n\n    const predicate = yield select(getPredicate);\n\n    if (predicate) {\n      yield take('TRUE');\n    } else {\n      yield take('FALSE');\n    }\n\n    let payload = yield select(getFinalPayload);\n\n    payload %= 101;\n\n    yield put({ payload, type: 'DONE' });\n  } catch (e) {\n    yield take('ERROR');\n  }\n}\n\nconst saga = testSaga(mainSaga);\n\nsaga\n  .next()\n  .take('READY')\n\n  .next()\n  .select(getPredicate)\n\n  .save('before predicate') // \nAs the names suggest save and restore allow you to restore saved history.\nThis can sometimes be beneficial for fast forwarding through a saga.\nsaga\n  .next()\n  .take('READY')\n\n  .next()\n  .select(getPredicate)\n\n  .save('before predicate') // \nNOTE\nDespite what the previous example suggests, save and restore don't\nnecessarily allow you to jump forward in your saga. As mentioned, they\nrestore history. This means the saga will be restarted, and the history for\nthe named label will be applied to get you back to a certain point in the saga.\nFor some cases, you can use this to jump forward, but in other cases, you might\nexpect the internal state of your saga to be different from what the applied\nhistory had. Here's an example to show what wouldn't work with save and\nrestore.\nfunction getPredicate() {}\nfunction itWasTrue() {}\nfunction itWasFalse() {}\n\nexport default function* mainSaga() {\n  try {\n    yield take('READY');\n\n    const predicate = yield select(getPredicate);\n\n    if (predicate) {\n      yield take('TRUE');\n      yield call(itWasTrue);\n    } else {\n      yield take('FALSE');\n      yield call(itWasFalse);\n    }\n\n    yield put({ type: 'DONE', payload: predicate });\n  } catch (e) {\n    yield take('ERROR');\n  }\n}\n\nconst saga = testSaga(mainSaga);\n\nsaga\n  .next()\n  .take('READY')\n\n  .next()\n  .select(getPredicate)\n\n  .save('before predicate') // \nEven though we restore the 'before predicate' label and supply a new value to\nthe predicate variable, that will get overwritten to whatever the history for\npredicate was when we saved the 'before final put' label. True time travel\nis not available yet but is a tentatively planned feature in the future. Ideas\nand contributions are welcome to add true time travel.\n"}}}